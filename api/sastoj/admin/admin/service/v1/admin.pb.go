// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: admin/admin/service/v1/admin.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/go-kratos/kratos/v2/errors"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorReason int32

const (
	// 为某个枚举单独设置错误码
	ErrorReason_SERVER_ERROR      ErrorReason = 0
	ErrorReason_INVALID_ARGUMENT  ErrorReason = 1
	ErrorReason_CONTENT_MISSING   ErrorReason = 2
	ErrorReason_CONTEST_NOT_FOUND ErrorReason = 3
	ErrorReason_CONTEST_INVALID   ErrorReason = 4
	ErrorReason_CONTEST_EXISTED   ErrorReason = 5
	ErrorReason_GROUP_NOT_FOUND   ErrorReason = 6
	ErrorReason_GROUP_INVALID     ErrorReason = 7
	ErrorReason_GROUP_EXISTED     ErrorReason = 8
	ErrorReason_USER_NOT_FOUND    ErrorReason = 9
	ErrorReason_USER_EXISTED      ErrorReason = 10
	ErrorReason_USER_INVALID      ErrorReason = 11
)

// Enum value maps for ErrorReason.
var (
	ErrorReason_name = map[int32]string{
		0:  "SERVER_ERROR",
		1:  "INVALID_ARGUMENT",
		2:  "CONTENT_MISSING",
		3:  "CONTEST_NOT_FOUND",
		4:  "CONTEST_INVALID",
		5:  "CONTEST_EXISTED",
		6:  "GROUP_NOT_FOUND",
		7:  "GROUP_INVALID",
		8:  "GROUP_EXISTED",
		9:  "USER_NOT_FOUND",
		10: "USER_EXISTED",
		11: "USER_INVALID",
	}
	ErrorReason_value = map[string]int32{
		"SERVER_ERROR":      0,
		"INVALID_ARGUMENT":  1,
		"CONTENT_MISSING":   2,
		"CONTEST_NOT_FOUND": 3,
		"CONTEST_INVALID":   4,
		"CONTEST_EXISTED":   5,
		"GROUP_NOT_FOUND":   6,
		"GROUP_INVALID":     7,
		"GROUP_EXISTED":     8,
		"USER_NOT_FOUND":    9,
		"USER_EXISTED":      10,
		"USER_INVALID":      11,
	}
)

func (x ErrorReason) Enum() *ErrorReason {
	p := new(ErrorReason)
	*p = x
	return p
}

func (x ErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_admin_service_v1_admin_proto_enumTypes[0].Descriptor()
}

func (ErrorReason) Type() protoreflect.EnumType {
	return &file_admin_admin_service_v1_admin_proto_enumTypes[0]
}

func (x ErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorReason.Descriptor instead.
func (ErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{0}
}

type Visibility int32

const (
	Visibility_Private Visibility = 0
	Visibility_Public  Visibility = 1
	Visibility_Contest Visibility = 2
)

// Enum value maps for Visibility.
var (
	Visibility_name = map[int32]string{
		0: "Private",
		1: "Public",
		2: "Contest",
	}
	Visibility_value = map[string]int32{
		"Private": 0,
		"Public":  1,
		"Contest": 2,
	}
)

func (x Visibility) Enum() *Visibility {
	p := new(Visibility)
	*p = x
	return p
}

func (x Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_admin_admin_service_v1_admin_proto_enumTypes[1].Descriptor()
}

func (Visibility) Type() protoreflect.EnumType {
	return &file_admin_admin_service_v1_admin_proto_enumTypes[1]
}

func (x Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Visibility.Descriptor instead.
func (Visibility) EnumDescriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{1}
}

type Case struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Point         int32                  `protobuf:"varint,2,opt,name=point,proto3" json:"point,omitempty"`
	Index         int32                  `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	IsAuto        bool                   `protobuf:"varint,4,opt,name=is_auto,json=isAuto,proto3" json:"is_auto,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Case) Reset() {
	*x = Case{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Case) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Case) ProtoMessage() {}

func (x *Case) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Case.ProtoReflect.Descriptor instead.
func (*Case) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{0}
}

func (x *Case) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Case) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *Case) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Case) GetIsAuto() bool {
	if x != nil {
		return x.IsAuto
	}
	return false
}

type DeleteCasesByProblemIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     int64                  `protobuf:"varint,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCasesByProblemIdRequest) Reset() {
	*x = DeleteCasesByProblemIdRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCasesByProblemIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCasesByProblemIdRequest) ProtoMessage() {}

func (x *DeleteCasesByProblemIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCasesByProblemIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteCasesByProblemIdRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteCasesByProblemIdRequest) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type DeleteCasesByProblemIdReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCasesByProblemIdReply) Reset() {
	*x = DeleteCasesByProblemIdReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCasesByProblemIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCasesByProblemIdReply) ProtoMessage() {}

func (x *DeleteCasesByProblemIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCasesByProblemIdReply.ProtoReflect.Descriptor instead.
func (*DeleteCasesByProblemIdReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{2}
}

type CreateContestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Status        int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Type          int32                  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Language      string                 `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`
	ExtraTime     int32                  `protobuf:"varint,8,opt,name=extra_time,json=extraTime,proto3" json:"extra_time,omitempty"`
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContestRequest) Reset() {
	*x = CreateContestRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContestRequest) ProtoMessage() {}

func (x *CreateContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContestRequest.ProtoReflect.Descriptor instead.
func (*CreateContestRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{3}
}

func (x *CreateContestRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateContestRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateContestRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateContestRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateContestRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreateContestRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *CreateContestRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CreateContestRequest) GetExtraTime() int32 {
	if x != nil {
		return x.ExtraTime
	}
	return 0
}

func (x *CreateContestRequest) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type CreateContestReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateContestReply) Reset() {
	*x = CreateContestReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateContestReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContestReply) ProtoMessage() {}

func (x *CreateContestReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContestReply.ProtoReflect.Descriptor instead.
func (*CreateContestReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{4}
}

func (x *CreateContestReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateContestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status        int32                  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Type          int32                  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Language      string                 `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
	ExtraTime     int32                  `protobuf:"varint,9,opt,name=extra_time,json=extraTime,proto3" json:"extra_time,omitempty"`
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContestRequest) Reset() {
	*x = UpdateContestRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContestRequest) ProtoMessage() {}

func (x *UpdateContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContestRequest.ProtoReflect.Descriptor instead.
func (*UpdateContestRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateContestRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateContestRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateContestRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateContestRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateContestRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UpdateContestRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateContestRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *UpdateContestRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *UpdateContestRequest) GetExtraTime() int32 {
	if x != nil {
		return x.ExtraTime
	}
	return 0
}

func (x *UpdateContestRequest) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type UpdateContestReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateContestReply) Reset() {
	*x = UpdateContestReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateContestReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContestReply) ProtoMessage() {}

func (x *UpdateContestReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContestReply.ProtoReflect.Descriptor instead.
func (*UpdateContestReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateContestReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteContestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteContestRequest) Reset() {
	*x = DeleteContestRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContestRequest) ProtoMessage() {}

func (x *DeleteContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContestRequest.ProtoReflect.Descriptor instead.
func (*DeleteContestRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteContestRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteContestReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteContestReply) Reset() {
	*x = DeleteContestReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteContestReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContestReply) ProtoMessage() {}

func (x *DeleteContestReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContestReply.ProtoReflect.Descriptor instead.
func (*DeleteContestReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteContestReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetContestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContestRequest) Reset() {
	*x = GetContestRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestRequest) ProtoMessage() {}

func (x *GetContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestRequest.ProtoReflect.Descriptor instead.
func (*GetContestRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{9}
}

func (x *GetContestRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetContestReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status        int32                  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Type          int32                  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Language      string                 `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
	ExtraTime     int32                  `protobuf:"varint,9,opt,name=extra_time,json=extraTime,proto3" json:"extra_time,omitempty"`
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContestReply) Reset() {
	*x = GetContestReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContestReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestReply) ProtoMessage() {}

func (x *GetContestReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestReply.ProtoReflect.Descriptor instead.
func (*GetContestReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{10}
}

func (x *GetContestReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetContestReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetContestReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetContestReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetContestReply) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *GetContestReply) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetContestReply) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetContestReply) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetContestReply) GetExtraTime() int32 {
	if x != nil {
		return x.ExtraTime
	}
	return 0
}

func (x *GetContestReply) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type ListContestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Size          int64                  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Current       int64                  `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContestRequest) Reset() {
	*x = ListContestRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestRequest) ProtoMessage() {}

func (x *ListContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestRequest.ProtoReflect.Descriptor instead.
func (*ListContestRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{11}
}

func (x *ListContestRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListContestRequest) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

type ListContestReply struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Contests      []*ListContestReply_Contest `protobuf:"bytes,1,rep,name=contests,proto3" json:"contests,omitempty"`
	Total         int64                       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContestReply) Reset() {
	*x = ListContestReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContestReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestReply) ProtoMessage() {}

func (x *ListContestReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestReply.ProtoReflect.Descriptor instead.
func (*ListContestReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{12}
}

func (x *ListContestReply) GetContests() []*ListContestReply_Contest {
	if x != nil {
		return x.Contests
	}
	return nil
}

func (x *ListContestReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AddContestantsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       int64                  `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	ContestId     int64                  `protobuf:"varint,2,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	Role          int32                  `protobuf:"varint,3,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddContestantsRequest) Reset() {
	*x = AddContestantsRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddContestantsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContestantsRequest) ProtoMessage() {}

func (x *AddContestantsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContestantsRequest.ProtoReflect.Descriptor instead.
func (*AddContestantsRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{13}
}

func (x *AddContestantsRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *AddContestantsRequest) GetContestId() int64 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *AddContestantsRequest) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

type AddContestantsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddContestantsReply) Reset() {
	*x = AddContestantsReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddContestantsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddContestantsReply) ProtoMessage() {}

func (x *AddContestantsReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddContestantsReply.ProtoReflect.Descriptor instead.
func (*AddContestantsReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{14}
}

func (x *AddContestantsReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ManualRankingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     int64                  `protobuf:"varint,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManualRankingRequest) Reset() {
	*x = ManualRankingRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManualRankingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualRankingRequest) ProtoMessage() {}

func (x *ManualRankingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualRankingRequest.ProtoReflect.Descriptor instead.
func (*ManualRankingRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{15}
}

func (x *ManualRankingRequest) GetContestId() int64 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

type ManualRankingReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManualRankingReply) Reset() {
	*x = ManualRankingReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManualRankingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualRankingReply) ProtoMessage() {}

func (x *ManualRankingReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualRankingReply.ProtoReflect.Descriptor instead.
func (*ManualRankingReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{16}
}

func (x *ManualRankingReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetRankingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContestId     int64                  `protobuf:"varint,1,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRankingRequest) Reset() {
	*x = GetRankingRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRankingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRankingRequest) ProtoMessage() {}

func (x *GetRankingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRankingRequest.ProtoReflect.Descriptor instead.
func (*GetRankingRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{17}
}

func (x *GetRankingRequest) GetContestId() int64 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

type GetRankingReply struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Users         []*GetRankingReply_UserResult `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRankingReply) Reset() {
	*x = GetRankingReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRankingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRankingReply) ProtoMessage() {}

func (x *GetRankingReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRankingReply.ProtoReflect.Descriptor instead.
func (*GetRankingReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{18}
}

func (x *GetRankingReply) GetUsers() []*GetRankingReply_UserResult {
	if x != nil {
		return x.Users
	}
	return nil
}

type CreateGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsRoot        bool                   `protobuf:"varint,2,opt,name=is_root,json=isRoot,proto3" json:"is_root,omitempty"`
	Manage        []int64                `protobuf:"varint,3,rep,packed,name=manage,proto3" json:"manage,omitempty"`
	Contests      []int64                `protobuf:"varint,4,rep,packed,name=contests,proto3" json:"contests,omitempty"`
	Problems      []int64                `protobuf:"varint,5,rep,packed,name=problems,proto3" json:"problems,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{19}
}

func (x *CreateGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGroupRequest) GetIsRoot() bool {
	if x != nil {
		return x.IsRoot
	}
	return false
}

func (x *CreateGroupRequest) GetManage() []int64 {
	if x != nil {
		return x.Manage
	}
	return nil
}

func (x *CreateGroupRequest) GetContests() []int64 {
	if x != nil {
		return x.Contests
	}
	return nil
}

func (x *CreateGroupRequest) GetProblems() []int64 {
	if x != nil {
		return x.Problems
	}
	return nil
}

type CreateGroupReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGroupReply) Reset() {
	*x = CreateGroupReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupReply) ProtoMessage() {}

func (x *CreateGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupReply.ProtoReflect.Descriptor instead.
func (*CreateGroupReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{20}
}

func (x *CreateGroupReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsRoot        bool                   `protobuf:"varint,3,opt,name=is_root,json=isRoot,proto3" json:"is_root,omitempty"`
	Manage        []int64                `protobuf:"varint,4,rep,packed,name=manage,proto3" json:"manage,omitempty"`
	Contests      []int64                `protobuf:"varint,5,rep,packed,name=contests,proto3" json:"contests,omitempty"`
	Problems      []int64                `protobuf:"varint,6,rep,packed,name=problems,proto3" json:"problems,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupRequest) Reset() {
	*x = UpdateGroupRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupRequest) ProtoMessage() {}

func (x *UpdateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateGroupRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateGroupRequest) GetIsRoot() bool {
	if x != nil {
		return x.IsRoot
	}
	return false
}

func (x *UpdateGroupRequest) GetManage() []int64 {
	if x != nil {
		return x.Manage
	}
	return nil
}

func (x *UpdateGroupRequest) GetContests() []int64 {
	if x != nil {
		return x.Contests
	}
	return nil
}

func (x *UpdateGroupRequest) GetProblems() []int64 {
	if x != nil {
		return x.Problems
	}
	return nil
}

type UpdateGroupReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupReply) Reset() {
	*x = UpdateGroupReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupReply) ProtoMessage() {}

func (x *UpdateGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupReply.ProtoReflect.Descriptor instead.
func (*UpdateGroupReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateGroupReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGroupRequest) Reset() {
	*x = DeleteGroupRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRequest) ProtoMessage() {}

func (x *DeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteGroupRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteGroupReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGroupReply) Reset() {
	*x = DeleteGroupReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupReply) ProtoMessage() {}

func (x *DeleteGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupReply.ProtoReflect.Descriptor instead.
func (*DeleteGroupReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteGroupReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupRequest) Reset() {
	*x = GetGroupRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequest) ProtoMessage() {}

func (x *GetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{25}
}

func (x *GetGroupRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetGroupReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsRoot        bool                   `protobuf:"varint,3,opt,name=is_root,json=isRoot,proto3" json:"is_root,omitempty"`
	Manage        []*GetContestReply     `protobuf:"bytes,4,rep,name=manage,proto3" json:"manage,omitempty"`
	Contests      []*GetContestReply     `protobuf:"bytes,5,rep,name=contests,proto3" json:"contests,omitempty"`
	Problems      []*Problem             `protobuf:"bytes,6,rep,name=problems,proto3" json:"problems,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupReply) Reset() {
	*x = GetGroupReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupReply) ProtoMessage() {}

func (x *GetGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupReply.ProtoReflect.Descriptor instead.
func (*GetGroupReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{26}
}

func (x *GetGroupReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetGroupReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetGroupReply) GetIsRoot() bool {
	if x != nil {
		return x.IsRoot
	}
	return false
}

func (x *GetGroupReply) GetManage() []*GetContestReply {
	if x != nil {
		return x.Manage
	}
	return nil
}

func (x *GetGroupReply) GetContests() []*GetContestReply {
	if x != nil {
		return x.Contests
	}
	return nil
}

func (x *GetGroupReply) GetProblems() []*Problem {
	if x != nil {
		return x.Problems
	}
	return nil
}

type ListGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Size          int64                  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Current       int64                  `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGroupRequest) Reset() {
	*x = ListGroupRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupRequest) ProtoMessage() {}

func (x *ListGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupRequest.ProtoReflect.Descriptor instead.
func (*ListGroupRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{27}
}

func (x *ListGroupRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListGroupRequest) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

type ListGroupReply struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Groups        []*ListGroupReply_Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGroupReply) Reset() {
	*x = ListGroupReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupReply) ProtoMessage() {}

func (x *ListGroupReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupReply.ProtoReflect.Descriptor instead.
func (*ListGroupReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{28}
}

func (x *ListGroupReply) GetGroups() []*ListGroupReply_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type Problem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeId        int64                  `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Point         int32                  `protobuf:"varint,5,opt,name=point,proto3" json:"point,omitempty"`
	ContestId     int64                  `protobuf:"varint,6,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	CaseVersion   int32                  `protobuf:"varint,7,opt,name=case_version,json=caseVersion,proto3" json:"case_version,omitempty"`
	Index         int32                  `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
	Config        string                 `protobuf:"bytes,9,opt,name=config,proto3" json:"config,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Problem) Reset() {
	*x = Problem{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Problem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Problem) ProtoMessage() {}

func (x *Problem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Problem.ProtoReflect.Descriptor instead.
func (*Problem) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{29}
}

func (x *Problem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Problem) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Problem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Problem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Problem) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *Problem) GetContestId() int64 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *Problem) GetCaseVersion() int32 {
	if x != nil {
		return x.CaseVersion
	}
	return 0
}

func (x *Problem) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Problem) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *Problem) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Submission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Status        int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Point         int32                  `protobuf:"varint,4,opt,name=point,proto3" json:"point,omitempty"`
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Submission) Reset() {
	*x = Submission{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submission) ProtoMessage() {}

func (x *Submission) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submission.ProtoReflect.Descriptor instead.
func (*Submission) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{30}
}

func (x *Submission) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Submission) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Submission) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Submission) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *Submission) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type SubmitJudgeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubmissionId  int64                  `protobuf:"varint,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	Point         int32                  `protobuf:"varint,2,opt,name=point,proto3" json:"point,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitJudgeRequest) Reset() {
	*x = SubmitJudgeRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitJudgeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitJudgeRequest) ProtoMessage() {}

func (x *SubmitJudgeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitJudgeRequest.ProtoReflect.Descriptor instead.
func (*SubmitJudgeRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{31}
}

func (x *SubmitJudgeRequest) GetSubmissionId() int64 {
	if x != nil {
		return x.SubmissionId
	}
	return 0
}

func (x *SubmitJudgeRequest) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

type SubmitJudgeReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitJudgeReply) Reset() {
	*x = SubmitJudgeReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitJudgeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitJudgeReply) ProtoMessage() {}

func (x *SubmitJudgeReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitJudgeReply.ProtoReflect.Descriptor instead.
func (*SubmitJudgeReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{32}
}

type GetJudgableProblemsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJudgableProblemsRequest) Reset() {
	*x = GetJudgableProblemsRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJudgableProblemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJudgableProblemsRequest) ProtoMessage() {}

func (x *GetJudgableProblemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJudgableProblemsRequest.ProtoReflect.Descriptor instead.
func (*GetJudgableProblemsRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{33}
}

type GetJudgableProblemsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*Problem             `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJudgableProblemsReply) Reset() {
	*x = GetJudgableProblemsReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJudgableProblemsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJudgableProblemsReply) ProtoMessage() {}

func (x *GetJudgableProblemsReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJudgableProblemsReply.ProtoReflect.Descriptor instead.
func (*GetJudgableProblemsReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{34}
}

func (x *GetJudgableProblemsReply) GetResults() []*Problem {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetSubmissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     int64                  `protobuf:"varint,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	Status        int32                  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubmissionsRequest) Reset() {
	*x = GetSubmissionsRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubmissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmissionsRequest) ProtoMessage() {}

func (x *GetSubmissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmissionsRequest.ProtoReflect.Descriptor instead.
func (*GetSubmissionsRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{35}
}

func (x *GetSubmissionsRequest) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *GetSubmissionsRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type GetSubmissionsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Submissions   []*Submission          `protobuf:"bytes,1,rep,name=submissions,proto3" json:"submissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubmissionsReply) Reset() {
	*x = GetSubmissionsReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubmissionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmissionsReply) ProtoMessage() {}

func (x *GetSubmissionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmissionsReply.ProtoReflect.Descriptor instead.
func (*GetSubmissionsReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{36}
}

func (x *GetSubmissionsReply) GetSubmissions() []*Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

type CreateProblemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TypeId        int64                  `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Point         int32                  `protobuf:"varint,4,opt,name=point,proto3" json:"point,omitempty"`
	ContestId     int64                  `protobuf:"varint,5,opt,name=contestId,proto3" json:"contestId,omitempty"`
	Index         int32                  `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`
	Config        string                 `protobuf:"bytes,7,opt,name=config,proto3" json:"config,omitempty"`
	OwnerId       int64                  `protobuf:"varint,8,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	Visibility    Visibility             `protobuf:"varint,9,opt,name=visibility,proto3,enum=api.sastoj.admin.admin.service.v1.Visibility" json:"visibility,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProblemRequest) Reset() {
	*x = CreateProblemRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProblemRequest) ProtoMessage() {}

func (x *CreateProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProblemRequest.ProtoReflect.Descriptor instead.
func (*CreateProblemRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{37}
}

func (x *CreateProblemRequest) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *CreateProblemRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateProblemRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateProblemRequest) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *CreateProblemRequest) GetContestId() int64 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *CreateProblemRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CreateProblemRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *CreateProblemRequest) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *CreateProblemRequest) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_Private
}

func (x *CreateProblemRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CreateProblemReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProblemReply) Reset() {
	*x = CreateProblemReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProblemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProblemReply) ProtoMessage() {}

func (x *CreateProblemReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProblemReply.ProtoReflect.Descriptor instead.
func (*CreateProblemReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{38}
}

func (x *CreateProblemReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateProblemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeId        int64                  `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Point         int32                  `protobuf:"varint,5,opt,name=point,proto3" json:"point,omitempty"`
	ContestId     int64                  `protobuf:"varint,6,opt,name=contestId,proto3" json:"contestId,omitempty"`
	CaseVersion   int32                  `protobuf:"varint,7,opt,name=caseVersion,proto3" json:"caseVersion,omitempty"`
	Index         int32                  `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
	Config        string                 `protobuf:"bytes,9,opt,name=config,proto3" json:"config,omitempty"`
	OwnerId       int64                  `protobuf:"varint,10,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	Visibility    Visibility             `protobuf:"varint,11,opt,name=visibility,proto3,enum=api.sastoj.admin.admin.service.v1.Visibility" json:"visibility,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,12,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProblemRequest) Reset() {
	*x = UpdateProblemRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemRequest) ProtoMessage() {}

func (x *UpdateProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemRequest.ProtoReflect.Descriptor instead.
func (*UpdateProblemRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateProblemRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateProblemRequest) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *UpdateProblemRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateProblemRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateProblemRequest) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *UpdateProblemRequest) GetContestId() int64 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *UpdateProblemRequest) GetCaseVersion() int32 {
	if x != nil {
		return x.CaseVersion
	}
	return 0
}

func (x *UpdateProblemRequest) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *UpdateProblemRequest) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *UpdateProblemRequest) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *UpdateProblemRequest) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_Private
}

func (x *UpdateProblemRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpdateProblemReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProblemReply) Reset() {
	*x = UpdateProblemReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProblemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemReply) ProtoMessage() {}

func (x *UpdateProblemReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemReply.ProtoReflect.Descriptor instead.
func (*UpdateProblemReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateProblemReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteProblemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProblemRequest) Reset() {
	*x = DeleteProblemRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemRequest) ProtoMessage() {}

func (x *DeleteProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemRequest.ProtoReflect.Descriptor instead.
func (*DeleteProblemRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteProblemRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteProblemReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProblemReply) Reset() {
	*x = DeleteProblemReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProblemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemReply) ProtoMessage() {}

func (x *DeleteProblemReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemReply.ProtoReflect.Descriptor instead.
func (*DeleteProblemReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{42}
}

func (x *DeleteProblemReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetProblemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProblemRequest) Reset() {
	*x = GetProblemRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemRequest) ProtoMessage() {}

func (x *GetProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemRequest.ProtoReflect.Descriptor instead.
func (*GetProblemRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{43}
}

func (x *GetProblemRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetProblemReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeId        int64                  `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Point         int32                  `protobuf:"varint,5,opt,name=point,proto3" json:"point,omitempty"`
	ContestId     int64                  `protobuf:"varint,6,opt,name=contestId,proto3" json:"contestId,omitempty"`
	CaseVersion   int32                  `protobuf:"varint,7,opt,name=caseVersion,proto3" json:"caseVersion,omitempty"`
	Index         int32                  `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
	Config        string                 `protobuf:"bytes,9,opt,name=config,proto3" json:"config,omitempty"`
	OwnerId       int64                  `protobuf:"varint,10,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	Visibility    Visibility             `protobuf:"varint,11,opt,name=visibility,proto3,enum=api.sastoj.admin.admin.service.v1.Visibility" json:"visibility,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,12,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProblemReply) Reset() {
	*x = GetProblemReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProblemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemReply) ProtoMessage() {}

func (x *GetProblemReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemReply.ProtoReflect.Descriptor instead.
func (*GetProblemReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{44}
}

func (x *GetProblemReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetProblemReply) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *GetProblemReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetProblemReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetProblemReply) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *GetProblemReply) GetContestId() int64 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *GetProblemReply) GetCaseVersion() int32 {
	if x != nil {
		return x.CaseVersion
	}
	return 0
}

func (x *GetProblemReply) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *GetProblemReply) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *GetProblemReply) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *GetProblemReply) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_Private
}

func (x *GetProblemReply) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ListProblemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Size          int32                  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Current       int32                  `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
	ContestId     int64                  `protobuf:"varint,3,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProblemRequest) Reset() {
	*x = ListProblemRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemRequest) ProtoMessage() {}

func (x *ListProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemRequest.ProtoReflect.Descriptor instead.
func (*ListProblemRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{45}
}

func (x *ListProblemRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListProblemRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListProblemRequest) GetContestId() int64 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

type ListProblemReply struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Total         int64                       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Problems      []*ListProblemReply_Problem `protobuf:"bytes,3,rep,name=problems,proto3" json:"problems,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProblemReply) Reset() {
	*x = ListProblemReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProblemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemReply) ProtoMessage() {}

func (x *ListProblemReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemReply.ProtoReflect.Descriptor instead.
func (*ListProblemReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{46}
}

func (x *ListProblemReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListProblemReply) GetProblems() []*ListProblemReply_Problem {
	if x != nil {
		return x.Problems
	}
	return nil
}

type GetProblemTypesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProblemTypesRequest) Reset() {
	*x = GetProblemTypesRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProblemTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemTypesRequest) ProtoMessage() {}

func (x *GetProblemTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemTypesRequest.ProtoReflect.Descriptor instead.
func (*GetProblemTypesRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{47}
}

type GetProblemTypesReply struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Types         []*GetProblemTypesReply_ProblemType `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProblemTypesReply) Reset() {
	*x = GetProblemTypesReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProblemTypesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemTypesReply) ProtoMessage() {}

func (x *GetProblemTypesReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemTypesReply.ProtoReflect.Descriptor instead.
func (*GetProblemTypesReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{48}
}

func (x *GetProblemTypesReply) GetTypes() []*GetProblemTypesReply_ProblemType {
	if x != nil {
		return x.Types
	}
	return nil
}

type UpdateAdjudicatorRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ProblemId           int64                  `protobuf:"varint,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	AdjudicatorGroupIds []int64                `protobuf:"varint,2,rep,packed,name=adjudicator_group_ids,json=adjudicatorGroupIds,proto3" json:"adjudicator_group_ids,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *UpdateAdjudicatorRequest) Reset() {
	*x = UpdateAdjudicatorRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAdjudicatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdjudicatorRequest) ProtoMessage() {}

func (x *UpdateAdjudicatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdjudicatorRequest.ProtoReflect.Descriptor instead.
func (*UpdateAdjudicatorRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{49}
}

func (x *UpdateAdjudicatorRequest) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *UpdateAdjudicatorRequest) GetAdjudicatorGroupIds() []int64 {
	if x != nil {
		return x.AdjudicatorGroupIds
	}
	return nil
}

type UpdateAdjudicatorReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAdjudicatorReply) Reset() {
	*x = UpdateAdjudicatorReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAdjudicatorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdjudicatorReply) ProtoMessage() {}

func (x *UpdateAdjudicatorReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdjudicatorReply.ProtoReflect.Descriptor instead.
func (*UpdateAdjudicatorReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateAdjudicatorReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetAdjudicatorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProblemId     int64                  `protobuf:"varint,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAdjudicatorRequest) Reset() {
	*x = GetAdjudicatorRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdjudicatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdjudicatorRequest) ProtoMessage() {}

func (x *GetAdjudicatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdjudicatorRequest.ProtoReflect.Descriptor instead.
func (*GetAdjudicatorRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{51}
}

func (x *GetAdjudicatorRequest) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetAdjudicatorReply struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Groups        []*GetAdjudicatorReply_Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAdjudicatorReply) Reset() {
	*x = GetAdjudicatorReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdjudicatorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdjudicatorReply) ProtoMessage() {}

func (x *GetAdjudicatorReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdjudicatorReply.ProtoReflect.Descriptor instead.
func (*GetAdjudicatorReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{52}
}

func (x *GetAdjudicatorReply) GetGroups() []*GetAdjudicatorReply_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type CreateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	GroupIds      []int64                `protobuf:"varint,3,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{53}
}

func (x *CreateUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUserRequest) GetGroupIds() []int64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

type CreateUserReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserReply) Reset() {
	*x = CreateUserReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReply) ProtoMessage() {}

func (x *CreateUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReply.ProtoReflect.Descriptor instead.
func (*CreateUserReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{54}
}

func (x *CreateUserReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BatchCreateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupIds      []int64                `protobuf:"varint,1,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	Number        int64                  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateUserRequest) Reset() {
	*x = BatchCreateUserRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateUserRequest) ProtoMessage() {}

func (x *BatchCreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateUserRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateUserRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{55}
}

func (x *BatchCreateUserRequest) GetGroupIds() []int64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *BatchCreateUserRequest) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

type BatchCreateUserReply struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Users         []*BatchCreateUserReply_User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateUserReply) Reset() {
	*x = BatchCreateUserReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateUserReply) ProtoMessage() {}

func (x *BatchCreateUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateUserReply.ProtoReflect.Descriptor instead.
func (*BatchCreateUserReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{56}
}

func (x *BatchCreateUserReply) GetUsers() []*BatchCreateUserReply_User {
	if x != nil {
		return x.Users
	}
	return nil
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	GroupIds      []int64                `protobuf:"varint,4,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	State         int32                  `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateUserRequest) GetGroupIds() []int64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *UpdateUserRequest) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type UpdateUserReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserReply) Reset() {
	*x = UpdateUserReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReply) ProtoMessage() {}

func (x *UpdateUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReply.ProtoReflect.Descriptor instead.
func (*UpdateUserReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{58}
}

func (x *UpdateUserReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{59}
}

func (x *DeleteUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteUserReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserReply) Reset() {
	*x = DeleteUserReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReply) ProtoMessage() {}

func (x *DeleteUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReply.ProtoReflect.Descriptor instead.
func (*DeleteUserReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{60}
}

func (x *DeleteUserReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{61}
}

func (x *GetUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUserReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	GroupIds      []int64                `protobuf:"varint,3,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	State         int32                  `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserReply) Reset() {
	*x = GetUserReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReply) ProtoMessage() {}

func (x *GetUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReply.ProtoReflect.Descriptor instead.
func (*GetUserReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{62}
}

func (x *GetUserReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetUserReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetUserReply) GetGroupIds() []int64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *GetUserReply) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type ListUserRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Size    int64                  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	Current int64                  `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"`
	// 查询条件
	GroupIds      []int64 `protobuf:"varint,3,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	Username      string  `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	State         int32   `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserRequest) Reset() {
	*x = ListUserRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserRequest) ProtoMessage() {}

func (x *ListUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserRequest.ProtoReflect.Descriptor instead.
func (*ListUserRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{63}
}

func (x *ListUserRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListUserRequest) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *ListUserRequest) GetGroupIds() []int64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *ListUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ListUserRequest) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type ListUserReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*ListUserReply_User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserReply) Reset() {
	*x = ListUserReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserReply) ProtoMessage() {}

func (x *ListUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserReply.ProtoReflect.Descriptor instead.
func (*ListUserReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{64}
}

func (x *ListUserReply) GetUsers() []*ListUserReply_User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUserReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetMQQueueStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMQQueueStatsRequest) Reset() {
	*x = GetMQQueueStatsRequest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMQQueueStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMQQueueStatsRequest) ProtoMessage() {}

func (x *GetMQQueueStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMQQueueStatsRequest.ProtoReflect.Descriptor instead.
func (*GetMQQueueStatsRequest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{65}
}

type GetMQQueueStatsReply struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Stats         []*GetMQQueueStatsReply_QueueStats `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMQQueueStatsReply) Reset() {
	*x = GetMQQueueStatsReply{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMQQueueStatsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMQQueueStatsReply) ProtoMessage() {}

func (x *GetMQQueueStatsReply) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMQQueueStatsReply.ProtoReflect.Descriptor instead.
func (*GetMQQueueStatsReply) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{66}
}

func (x *GetMQQueueStatsReply) GetStats() []*GetMQQueueStatsReply_QueueStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type ListContestReply_Contest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status        int32                  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Type          int32                  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Language      string                 `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
	ExtraTime     int32                  `protobuf:"varint,9,opt,name=extra_time,json=extraTime,proto3" json:"extra_time,omitempty"`
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContestReply_Contest) Reset() {
	*x = ListContestReply_Contest{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContestReply_Contest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestReply_Contest) ProtoMessage() {}

func (x *ListContestReply_Contest) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestReply_Contest.ProtoReflect.Descriptor instead.
func (*ListContestReply_Contest) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{12, 0}
}

func (x *ListContestReply_Contest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListContestReply_Contest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListContestReply_Contest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListContestReply_Contest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ListContestReply_Contest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ListContestReply_Contest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListContestReply_Contest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ListContestReply_Contest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ListContestReply_Contest) GetExtraTime() int32 {
	if x != nil {
		return x.ExtraTime
	}
	return 0
}

func (x *ListContestReply_Contest) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type GetRankingReply_UserResult struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Problems      []*GetRankingReply_UserResult_ProblemResult `protobuf:"bytes,1,rep,name=problems,proto3" json:"problems,omitempty"`
	Username      string                                      `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	TotalScore    int32                                       `protobuf:"varint,3,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`
	Rank          int32                                       `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
	Penalty       int32                                       `protobuf:"varint,5,opt,name=penalty,proto3" json:"penalty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRankingReply_UserResult) Reset() {
	*x = GetRankingReply_UserResult{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRankingReply_UserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRankingReply_UserResult) ProtoMessage() {}

func (x *GetRankingReply_UserResult) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRankingReply_UserResult.ProtoReflect.Descriptor instead.
func (*GetRankingReply_UserResult) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{18, 0}
}

func (x *GetRankingReply_UserResult) GetProblems() []*GetRankingReply_UserResult_ProblemResult {
	if x != nil {
		return x.Problems
	}
	return nil
}

func (x *GetRankingReply_UserResult) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetRankingReply_UserResult) GetTotalScore() int32 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

func (x *GetRankingReply_UserResult) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GetRankingReply_UserResult) GetPenalty() int32 {
	if x != nil {
		return x.Penalty
	}
	return 0
}

type GetRankingReply_UserResult_ProblemResult struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ProblemId         int64                  `protobuf:"varint,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
	State             int32                  `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	Point             int32                  `protobuf:"varint,3,opt,name=point,proto3" json:"point,omitempty"`
	TriedTimes        int32                  `protobuf:"varint,4,opt,name=tried_times,json=triedTimes,proto3" json:"tried_times,omitempty"`
	ScoreAchievedTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=score_achieved_time,json=scoreAchievedTime,proto3" json:"score_achieved_time,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetRankingReply_UserResult_ProblemResult) Reset() {
	*x = GetRankingReply_UserResult_ProblemResult{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRankingReply_UserResult_ProblemResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRankingReply_UserResult_ProblemResult) ProtoMessage() {}

func (x *GetRankingReply_UserResult_ProblemResult) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRankingReply_UserResult_ProblemResult.ProtoReflect.Descriptor instead.
func (*GetRankingReply_UserResult_ProblemResult) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{18, 0, 0}
}

func (x *GetRankingReply_UserResult_ProblemResult) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *GetRankingReply_UserResult_ProblemResult) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *GetRankingReply_UserResult_ProblemResult) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *GetRankingReply_UserResult_ProblemResult) GetTriedTimes() int32 {
	if x != nil {
		return x.TriedTimes
	}
	return 0
}

func (x *GetRankingReply_UserResult_ProblemResult) GetScoreAchievedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ScoreAchievedTime
	}
	return nil
}

type ListGroupReply_Group struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsRoot        bool                   `protobuf:"varint,3,opt,name=is_root,json=isRoot,proto3" json:"is_root,omitempty"`
	Manage        []int64                `protobuf:"varint,4,rep,packed,name=manage,proto3" json:"manage,omitempty"`
	Contests      []int64                `protobuf:"varint,5,rep,packed,name=contests,proto3" json:"contests,omitempty"`
	Problems      []int64                `protobuf:"varint,6,rep,packed,name=problems,proto3" json:"problems,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGroupReply_Group) Reset() {
	*x = ListGroupReply_Group{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupReply_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupReply_Group) ProtoMessage() {}

func (x *ListGroupReply_Group) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupReply_Group.ProtoReflect.Descriptor instead.
func (*ListGroupReply_Group) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{28, 0}
}

func (x *ListGroupReply_Group) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListGroupReply_Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListGroupReply_Group) GetIsRoot() bool {
	if x != nil {
		return x.IsRoot
	}
	return false
}

func (x *ListGroupReply_Group) GetManage() []int64 {
	if x != nil {
		return x.Manage
	}
	return nil
}

func (x *ListGroupReply_Group) GetContests() []int64 {
	if x != nil {
		return x.Contests
	}
	return nil
}

func (x *ListGroupReply_Group) GetProblems() []int64 {
	if x != nil {
		return x.Problems
	}
	return nil
}

type ListProblemReply_Problem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TypeId        int64                  `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Point         int32                  `protobuf:"varint,5,opt,name=point,proto3" json:"point,omitempty"`
	ContestId     int64                  `protobuf:"varint,6,opt,name=contestId,proto3" json:"contestId,omitempty"`
	CaseVersion   int32                  `protobuf:"varint,7,opt,name=caseVersion,proto3" json:"caseVersion,omitempty"`
	Index         int32                  `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
	Config        string                 `protobuf:"bytes,9,opt,name=config,proto3" json:"config,omitempty"`
	OwnerId       int64                  `protobuf:"varint,10,opt,name=ownerId,proto3" json:"ownerId,omitempty"`
	Visibility    Visibility             `protobuf:"varint,11,opt,name=visibility,proto3,enum=api.sastoj.admin.admin.service.v1.Visibility" json:"visibility,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,12,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProblemReply_Problem) Reset() {
	*x = ListProblemReply_Problem{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProblemReply_Problem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProblemReply_Problem) ProtoMessage() {}

func (x *ListProblemReply_Problem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProblemReply_Problem.ProtoReflect.Descriptor instead.
func (*ListProblemReply_Problem) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{46, 0}
}

func (x *ListProblemReply_Problem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListProblemReply_Problem) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *ListProblemReply_Problem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListProblemReply_Problem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ListProblemReply_Problem) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *ListProblemReply_Problem) GetContestId() int64 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *ListProblemReply_Problem) GetCaseVersion() int32 {
	if x != nil {
		return x.CaseVersion
	}
	return 0
}

func (x *ListProblemReply_Problem) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ListProblemReply_Problem) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *ListProblemReply_Problem) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *ListProblemReply_Problem) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_Private
}

func (x *ListProblemReply_Problem) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GetProblemTypesReply_ProblemType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Slug          string                 `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Judge         string                 `protobuf:"bytes,5,opt,name=judge,proto3" json:"judge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProblemTypesReply_ProblemType) Reset() {
	*x = GetProblemTypesReply_ProblemType{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProblemTypesReply_ProblemType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemTypesReply_ProblemType) ProtoMessage() {}

func (x *GetProblemTypesReply_ProblemType) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemTypesReply_ProblemType.ProtoReflect.Descriptor instead.
func (*GetProblemTypesReply_ProblemType) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{48, 0}
}

func (x *GetProblemTypesReply_ProblemType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetProblemTypesReply_ProblemType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetProblemTypesReply_ProblemType) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *GetProblemTypesReply_ProblemType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetProblemTypesReply_ProblemType) GetJudge() string {
	if x != nil {
		return x.Judge
	}
	return ""
}

type GetAdjudicatorReply_Group struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAdjudicatorReply_Group) Reset() {
	*x = GetAdjudicatorReply_Group{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdjudicatorReply_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdjudicatorReply_Group) ProtoMessage() {}

func (x *GetAdjudicatorReply_Group) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdjudicatorReply_Group.ProtoReflect.Descriptor instead.
func (*GetAdjudicatorReply_Group) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{52, 0}
}

func (x *GetAdjudicatorReply_Group) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAdjudicatorReply_Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type BatchCreateUserReply_User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateUserReply_User) Reset() {
	*x = BatchCreateUserReply_User{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateUserReply_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateUserReply_User) ProtoMessage() {}

func (x *BatchCreateUserReply_User) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateUserReply_User.ProtoReflect.Descriptor instead.
func (*BatchCreateUserReply_User) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{56, 0}
}

func (x *BatchCreateUserReply_User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BatchCreateUserReply_User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ListUserReply_User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	GroupIds      []int64                `protobuf:"varint,3,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	State         int32                  `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListUserReply_User) Reset() {
	*x = ListUserReply_User{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListUserReply_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserReply_User) ProtoMessage() {}

func (x *ListUserReply_User) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserReply_User.ProtoReflect.Descriptor instead.
func (*ListUserReply_User) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{64, 0}
}

func (x *ListUserReply_User) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListUserReply_User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ListUserReply_User) GetGroupIds() []int64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *ListUserReply_User) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type GetMQQueueStatsReply_QueueStats struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	QueueName       string                 `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	MessagesReady   int64                  `protobuf:"varint,2,opt,name=messages_ready,json=messagesReady,proto3" json:"messages_ready,omitempty"`
	MessagesUnacked int64                  `protobuf:"varint,3,opt,name=messages_unacked,json=messagesUnacked,proto3" json:"messages_unacked,omitempty"`
	Consumers       int64                  `protobuf:"varint,4,opt,name=consumers,proto3" json:"consumers,omitempty"`
	Memory          int64                  `protobuf:"varint,5,opt,name=memory,proto3" json:"memory,omitempty"`
	MessageRateIn   int64                  `protobuf:"varint,6,opt,name=message_rate_in,json=messageRateIn,proto3" json:"message_rate_in,omitempty"`
	MessageRateOut  int64                  `protobuf:"varint,7,opt,name=message_rate_out,json=messageRateOut,proto3" json:"message_rate_out,omitempty"`
	MessageRateAck  int64                  `protobuf:"varint,8,opt,name=message_rate_ack,json=messageRateAck,proto3" json:"message_rate_ack,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetMQQueueStatsReply_QueueStats) Reset() {
	*x = GetMQQueueStatsReply_QueueStats{}
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMQQueueStatsReply_QueueStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMQQueueStatsReply_QueueStats) ProtoMessage() {}

func (x *GetMQQueueStatsReply_QueueStats) ProtoReflect() protoreflect.Message {
	mi := &file_admin_admin_service_v1_admin_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMQQueueStatsReply_QueueStats.ProtoReflect.Descriptor instead.
func (*GetMQQueueStatsReply_QueueStats) Descriptor() ([]byte, []int) {
	return file_admin_admin_service_v1_admin_proto_rawDescGZIP(), []int{66, 0}
}

func (x *GetMQQueueStatsReply_QueueStats) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *GetMQQueueStatsReply_QueueStats) GetMessagesReady() int64 {
	if x != nil {
		return x.MessagesReady
	}
	return 0
}

func (x *GetMQQueueStatsReply_QueueStats) GetMessagesUnacked() int64 {
	if x != nil {
		return x.MessagesUnacked
	}
	return 0
}

func (x *GetMQQueueStatsReply_QueueStats) GetConsumers() int64 {
	if x != nil {
		return x.Consumers
	}
	return 0
}

func (x *GetMQQueueStatsReply_QueueStats) GetMemory() int64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *GetMQQueueStatsReply_QueueStats) GetMessageRateIn() int64 {
	if x != nil {
		return x.MessageRateIn
	}
	return 0
}

func (x *GetMQQueueStatsReply_QueueStats) GetMessageRateOut() int64 {
	if x != nil {
		return x.MessageRateOut
	}
	return 0
}

func (x *GetMQQueueStatsReply_QueueStats) GetMessageRateAck() int64 {
	if x != nil {
		return x.MessageRateAck
	}
	return 0
}

var File_admin_admin_service_v1_admin_proto protoreflect.FileDescriptor

const file_admin_admin_service_v1_admin_proto_rawDesc = "" +
	"\n" +
	"\"admin/admin/service/v1/admin.proto\x12!api.sastoj.admin.admin.service.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x13errors/errors.proto\x1a\x17validate/validate.proto\"[\n" +
	"\x04Case\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05point\x18\x02 \x01(\x05R\x05point\x12\x14\n" +
	"\x05index\x18\x03 \x01(\x05R\x05index\x12\x17\n" +
	"\ais_auto\x18\x04 \x01(\bR\x06isAuto\">\n" +
	"\x1dDeleteCasesByProblemIdRequest\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\x03R\tproblemId\"\x1d\n" +
	"\x1bDeleteCasesByProblemIdReply\"\xe4\x02\n" +
	"\x14CreateContestRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x03 \x01(\x05R\x06status\x12\x12\n" +
	"\x04type\x18\x04 \x01(\x05R\x04type\x129\n" +
	"\n" +
	"start_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1a\n" +
	"\blanguage\x18\a \x01(\tR\blanguage\x12\x1d\n" +
	"\n" +
	"extra_time\x18\b \x01(\x05R\textraTime\x12;\n" +
	"\vcreate_time\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\"$\n" +
	"\x12CreateContestReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xf4\x02\n" +
	"\x14UpdateContestRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x04 \x01(\x05R\x06status\x12\x12\n" +
	"\x04type\x18\x05 \x01(\x05R\x04type\x129\n" +
	"\n" +
	"start_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1a\n" +
	"\blanguage\x18\b \x01(\tR\blanguage\x12\x1d\n" +
	"\n" +
	"extra_time\x18\t \x01(\x05R\textraTime\x12;\n" +
	"\vcreate_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\".\n" +
	"\x12UpdateContestReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"&\n" +
	"\x14DeleteContestRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\".\n" +
	"\x12DeleteContestReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"#\n" +
	"\x11GetContestRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xef\x02\n" +
	"\x0fGetContestReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x04 \x01(\x05R\x06status\x12\x12\n" +
	"\x04type\x18\x05 \x01(\x05R\x04type\x129\n" +
	"\n" +
	"start_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1a\n" +
	"\blanguage\x18\b \x01(\tR\blanguage\x12\x1d\n" +
	"\n" +
	"extra_time\x18\t \x01(\x05R\textraTime\x12;\n" +
	"\vcreate_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\"f\n" +
	"\x12ListContestRequest\x12$\n" +
	"\x04size\x18\x01 \x01(\x03B\x10\xfaB\r\"\v \xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x04size\x12*\n" +
	"\acurrent\x18\x02 \x01(\x03B\x10\xfaB\r\"\v \xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\acurrent\"\xeb\x03\n" +
	"\x10ListContestReply\x12W\n" +
	"\bcontests\x18\x01 \x03(\v2;.api.sastoj.admin.admin.service.v1.ListContestReply.ContestR\bcontests\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x1a\xe7\x02\n" +
	"\aContest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x04 \x01(\x05R\x06status\x12\x12\n" +
	"\x04type\x18\x05 \x01(\x05R\x04type\x129\n" +
	"\n" +
	"start_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1a\n" +
	"\blanguage\x18\b \x01(\tR\blanguage\x12\x1d\n" +
	"\n" +
	"extra_time\x18\t \x01(\x05R\textraTime\x12;\n" +
	"\vcreate_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\"p\n" +
	"\x15AddContestantsRequest\x12\x19\n" +
	"\bgroup_id\x18\x01 \x01(\x03R\agroupId\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x02 \x01(\x03R\tcontestId\x12\x1d\n" +
	"\x04role\x18\x03 \x01(\x05B\t\xfaB\x06\x1a\x040\x000\x01R\x04role\"/\n" +
	"\x13AddContestantsReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"5\n" +
	"\x14ManualRankingRequest\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\x03R\tcontestId\".\n" +
	"\x12ManualRankingReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"2\n" +
	"\x11GetRankingRequest\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x01 \x01(\x03R\tcontestId\"\x93\x04\n" +
	"\x0fGetRankingReply\x12S\n" +
	"\x05users\x18\x01 \x03(\v2=.api.sastoj.admin.admin.service.v1.GetRankingReply.UserResultR\x05users\x1a\xaa\x03\n" +
	"\n" +
	"UserResult\x12g\n" +
	"\bproblems\x18\x01 \x03(\v2K.api.sastoj.admin.admin.service.v1.GetRankingReply.UserResult.ProblemResultR\bproblems\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1f\n" +
	"\vtotal_score\x18\x03 \x01(\x05R\n" +
	"totalScore\x12\x12\n" +
	"\x04rank\x18\x04 \x01(\x05R\x04rank\x12\x18\n" +
	"\apenalty\x18\x05 \x01(\x05R\apenalty\x1a\xc7\x01\n" +
	"\rProblemResult\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\x03R\tproblemId\x12\x14\n" +
	"\x05state\x18\x02 \x01(\x05R\x05state\x12\x14\n" +
	"\x05point\x18\x03 \x01(\x05R\x05point\x12\x1f\n" +
	"\vtried_times\x18\x04 \x01(\x05R\n" +
	"triedTimes\x12J\n" +
	"\x13score_achieved_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x11scoreAchievedTime\"\x91\x01\n" +
	"\x12CreateGroupRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x17\n" +
	"\ais_root\x18\x02 \x01(\bR\x06isRoot\x12\x16\n" +
	"\x06manage\x18\x03 \x03(\x03R\x06manage\x12\x1a\n" +
	"\bcontests\x18\x04 \x03(\x03R\bcontests\x12\x1a\n" +
	"\bproblems\x18\x05 \x03(\x03R\bproblems\"\"\n" +
	"\x10CreateGroupReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xa1\x01\n" +
	"\x12UpdateGroupRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x17\n" +
	"\ais_root\x18\x03 \x01(\bR\x06isRoot\x12\x16\n" +
	"\x06manage\x18\x04 \x03(\x03R\x06manage\x12\x1a\n" +
	"\bcontests\x18\x05 \x03(\x03R\bcontests\x12\x1a\n" +
	"\bproblems\x18\x06 \x03(\x03R\bproblems\",\n" +
	"\x10UpdateGroupReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"$\n" +
	"\x12DeleteGroupRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\",\n" +
	"\x10DeleteGroupReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"!\n" +
	"\x0fGetGroupRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xb0\x02\n" +
	"\rGetGroupReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x17\n" +
	"\ais_root\x18\x03 \x01(\bR\x06isRoot\x12J\n" +
	"\x06manage\x18\x04 \x03(\v22.api.sastoj.admin.admin.service.v1.GetContestReplyR\x06manage\x12N\n" +
	"\bcontests\x18\x05 \x03(\v22.api.sastoj.admin.admin.service.v1.GetContestReplyR\bcontests\x12F\n" +
	"\bproblems\x18\x06 \x03(\v2*.api.sastoj.admin.admin.service.v1.ProblemR\bproblems\"d\n" +
	"\x10ListGroupRequest\x12$\n" +
	"\x04size\x18\x01 \x01(\x03B\x10\xfaB\r\"\v \xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\x04size\x12*\n" +
	"\acurrent\x18\x02 \x01(\x03B\x10\xfaB\r\"\v \xff\xff\xff\xff\xff\xff\xff\xff\xff\x01R\acurrent\"\xf8\x01\n" +
	"\x0eListGroupReply\x12O\n" +
	"\x06groups\x18\x01 \x03(\v27.api.sastoj.admin.admin.service.v1.ListGroupReply.GroupR\x06groups\x1a\x94\x01\n" +
	"\x05Group\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x17\n" +
	"\ais_root\x18\x03 \x01(\bR\x06isRoot\x12\x16\n" +
	"\x06manage\x18\x04 \x03(\x03R\x06manage\x12\x1a\n" +
	"\bcontests\x18\x05 \x03(\x03R\bcontests\x12\x1a\n" +
	"\bproblems\x18\x06 \x03(\x03R\bproblems\"\xfb\x02\n" +
	"\aProblem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\atype_id\x18\x02 \x01(\x03R\x06typeId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x14\n" +
	"\x05point\x18\x05 \x01(\x05R\x05point\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x06 \x01(\x03R\tcontestId\x12!\n" +
	"\fcase_version\x18\a \x01(\x05R\vcaseVersion\x12\x14\n" +
	"\x05index\x18\b \x01(\x05R\x05index\x12\x16\n" +
	"\x06config\x18\t \x01(\tR\x06config\x12T\n" +
	"\bmetadata\x18\n" +
	" \x03(\v28.api.sastoj.admin.admin.service.v1.Problem.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9b\x01\n" +
	"\n" +
	"Submission\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x16\n" +
	"\x06status\x18\x03 \x01(\x05R\x06status\x12\x14\n" +
	"\x05point\x18\x04 \x01(\x05R\x05point\x12;\n" +
	"\vcreate_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\"O\n" +
	"\x12SubmitJudgeRequest\x12#\n" +
	"\rsubmission_id\x18\x01 \x01(\x03R\fsubmissionId\x12\x14\n" +
	"\x05point\x18\x02 \x01(\x05R\x05point\"\x12\n" +
	"\x10SubmitJudgeReply\"\x1c\n" +
	"\x1aGetJudgableProblemsRequest\"`\n" +
	"\x18GetJudgableProblemsReply\x12D\n" +
	"\aresults\x18\x01 \x03(\v2*.api.sastoj.admin.admin.service.v1.ProblemR\aresults\"N\n" +
	"\x15GetSubmissionsRequest\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\x03R\tproblemId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\x05R\x06status\"f\n" +
	"\x13GetSubmissionsReply\x12O\n" +
	"\vsubmissions\x18\x01 \x03(\v2-.api.sastoj.admin.admin.service.v1.SubmissionR\vsubmissions\"\xca\x03\n" +
	"\x14CreateProblemRequest\x12\x17\n" +
	"\atype_id\x18\x01 \x01(\x03R\x06typeId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x14\n" +
	"\x05point\x18\x04 \x01(\x05R\x05point\x12\x1c\n" +
	"\tcontestId\x18\x05 \x01(\x03R\tcontestId\x12\x14\n" +
	"\x05index\x18\x06 \x01(\x05R\x05index\x12\x16\n" +
	"\x06config\x18\a \x01(\tR\x06config\x12\x18\n" +
	"\aownerId\x18\b \x01(\x03R\aownerId\x12M\n" +
	"\n" +
	"visibility\x18\t \x01(\x0e2-.api.sastoj.admin.admin.service.v1.VisibilityR\n" +
	"visibility\x12a\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2E.api.sastoj.admin.admin.service.v1.CreateProblemRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"$\n" +
	"\x12CreateProblemReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xfc\x03\n" +
	"\x14UpdateProblemRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\atype_id\x18\x02 \x01(\x03R\x06typeId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x14\n" +
	"\x05point\x18\x05 \x01(\x05R\x05point\x12\x1c\n" +
	"\tcontestId\x18\x06 \x01(\x03R\tcontestId\x12 \n" +
	"\vcaseVersion\x18\a \x01(\x05R\vcaseVersion\x12\x14\n" +
	"\x05index\x18\b \x01(\x05R\x05index\x12\x16\n" +
	"\x06config\x18\t \x01(\tR\x06config\x12\x18\n" +
	"\aownerId\x18\n" +
	" \x01(\x03R\aownerId\x12M\n" +
	"\n" +
	"visibility\x18\v \x01(\x0e2-.api.sastoj.admin.admin.service.v1.VisibilityR\n" +
	"visibility\x12a\n" +
	"\bmetadata\x18\f \x03(\v2E.api.sastoj.admin.admin.service.v1.UpdateProblemRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\".\n" +
	"\x12UpdateProblemReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"&\n" +
	"\x14DeleteProblemRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\".\n" +
	"\x12DeleteProblemReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"#\n" +
	"\x11GetProblemRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"\xf2\x03\n" +
	"\x0fGetProblemReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\atype_id\x18\x02 \x01(\x03R\x06typeId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x14\n" +
	"\x05point\x18\x05 \x01(\x05R\x05point\x12\x1c\n" +
	"\tcontestId\x18\x06 \x01(\x03R\tcontestId\x12 \n" +
	"\vcaseVersion\x18\a \x01(\x05R\vcaseVersion\x12\x14\n" +
	"\x05index\x18\b \x01(\x05R\x05index\x12\x16\n" +
	"\x06config\x18\t \x01(\tR\x06config\x12\x18\n" +
	"\aownerId\x18\n" +
	" \x01(\x03R\aownerId\x12M\n" +
	"\n" +
	"visibility\x18\v \x01(\x0e2-.api.sastoj.admin.admin.service.v1.VisibilityR\n" +
	"visibility\x12\\\n" +
	"\bmetadata\x18\f \x03(\v2@.api.sastoj.admin.admin.service.v1.GetProblemReply.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"a\n" +
	"\x12ListProblemRequest\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x05R\x04size\x12\x18\n" +
	"\acurrent\x18\x02 \x01(\x05R\acurrent\x12\x1d\n" +
	"\n" +
	"contest_id\x18\x03 \x01(\x03R\tcontestId\"\xf7\x04\n" +
	"\x10ListProblemReply\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12W\n" +
	"\bproblems\x18\x03 \x03(\v2;.api.sastoj.admin.admin.service.v1.ListProblemReply.ProblemR\bproblems\x1a\xf3\x03\n" +
	"\aProblem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\atype_id\x18\x02 \x01(\x03R\x06typeId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x14\n" +
	"\x05point\x18\x05 \x01(\x05R\x05point\x12\x1c\n" +
	"\tcontestId\x18\x06 \x01(\x03R\tcontestId\x12 \n" +
	"\vcaseVersion\x18\a \x01(\x05R\vcaseVersion\x12\x14\n" +
	"\x05index\x18\b \x01(\x05R\x05index\x12\x16\n" +
	"\x06config\x18\t \x01(\tR\x06config\x12\x18\n" +
	"\aownerId\x18\n" +
	" \x01(\x03R\aownerId\x12M\n" +
	"\n" +
	"visibility\x18\v \x01(\x0e2-.api.sastoj.admin.admin.service.v1.VisibilityR\n" +
	"visibility\x12e\n" +
	"\bmetadata\x18\f \x03(\v2I.api.sastoj.admin.admin.service.v1.ListProblemReply.Problem.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x18\n" +
	"\x16GetProblemTypesRequest\"\xf0\x01\n" +
	"\x14GetProblemTypesReply\x12Y\n" +
	"\x05types\x18\x01 \x03(\v2C.api.sastoj.admin.admin.service.v1.GetProblemTypesReply.ProblemTypeR\x05types\x1a}\n" +
	"\vProblemType\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04slug\x18\x03 \x01(\tR\x04slug\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x14\n" +
	"\x05judge\x18\x05 \x01(\tR\x05judge\"m\n" +
	"\x18UpdateAdjudicatorRequest\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\x03R\tproblemId\x122\n" +
	"\x15adjudicator_group_ids\x18\x02 \x03(\x03R\x13adjudicatorGroupIds\"2\n" +
	"\x16UpdateAdjudicatorReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"6\n" +
	"\x15GetAdjudicatorRequest\x12\x1d\n" +
	"\n" +
	"problem_id\x18\x01 \x01(\x03R\tproblemId\"\x98\x01\n" +
	"\x13GetAdjudicatorReply\x12T\n" +
	"\x06groups\x18\x01 \x03(\v2<.api.sastoj.admin.admin.service.v1.GetAdjudicatorReply.GroupR\x06groups\x1a+\n" +
	"\x05Group\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"h\n" +
	"\x11CreateUserRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x1b\n" +
	"\tgroup_ids\x18\x03 \x03(\x03R\bgroupIds\"!\n" +
	"\x0fCreateUserReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"V\n" +
	"\x16BatchCreateUserRequest\x12\x1b\n" +
	"\tgroup_ids\x18\x01 \x03(\x03R\bgroupIds\x12\x1f\n" +
	"\x06number\x18\x02 \x01(\x03B\a\xfaB\x04\"\x02 \x00R\x06number\"\xaa\x01\n" +
	"\x14BatchCreateUserReply\x12R\n" +
	"\x05users\x18\x01 \x03(\v2<.api.sastoj.admin.admin.service.v1.BatchCreateUserReply.UserR\x05users\x1a>\n" +
	"\x04User\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"\x8e\x01\n" +
	"\x11UpdateUserRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x1b\n" +
	"\tgroup_ids\x18\x04 \x03(\x03R\bgroupIds\x12\x14\n" +
	"\x05state\x18\x05 \x01(\x05R\x05state\"+\n" +
	"\x0fUpdateUserReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"#\n" +
	"\x11DeleteUserRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"+\n" +
	"\x0fDeleteUserReply\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\" \n" +
	"\x0eGetUserRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\"m\n" +
	"\fGetUserReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1b\n" +
	"\tgroup_ids\x18\x03 \x03(\x03R\bgroupIds\x12\x14\n" +
	"\x05state\x18\x04 \x01(\x05R\x05state\"\x8e\x01\n" +
	"\x0fListUserRequest\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x03R\x04size\x12\x18\n" +
	"\acurrent\x18\x02 \x01(\x03R\acurrent\x12\x1b\n" +
	"\tgroup_ids\x18\x03 \x03(\x03R\bgroupIds\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12\x14\n" +
	"\x05state\x18\x05 \x01(\x05R\x05state\"\xd9\x01\n" +
	"\rListUserReply\x12K\n" +
	"\x05users\x18\x01 \x03(\v25.api.sastoj.admin.admin.service.v1.ListUserReply.UserR\x05users\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x1ae\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x1b\n" +
	"\tgroup_ids\x18\x03 \x03(\x03R\bgroupIds\x12\x14\n" +
	"\x05state\x18\x04 \x01(\x05R\x05state\"\x18\n" +
	"\x16GetMQQueueStatsRequest\"\xa2\x03\n" +
	"\x14GetMQQueueStatsReply\x12X\n" +
	"\x05stats\x18\x01 \x03(\v2B.api.sastoj.admin.admin.service.v1.GetMQQueueStatsReply.QueueStatsR\x05stats\x1a\xaf\x02\n" +
	"\n" +
	"QueueStats\x12\x1d\n" +
	"\n" +
	"queue_name\x18\x01 \x01(\tR\tqueueName\x12%\n" +
	"\x0emessages_ready\x18\x02 \x01(\x03R\rmessagesReady\x12)\n" +
	"\x10messages_unacked\x18\x03 \x01(\x03R\x0fmessagesUnacked\x12\x1c\n" +
	"\tconsumers\x18\x04 \x01(\x03R\tconsumers\x12\x16\n" +
	"\x06memory\x18\x05 \x01(\x03R\x06memory\x12&\n" +
	"\x0fmessage_rate_in\x18\x06 \x01(\x03R\rmessageRateIn\x12(\n" +
	"\x10message_rate_out\x18\a \x01(\x03R\x0emessageRateOut\x12(\n" +
	"\x10message_rate_ack\x18\b \x01(\x03R\x0emessageRateAck*\xcc\x02\n" +
	"\vErrorReason\x12\x16\n" +
	"\fSERVER_ERROR\x10\x00\x1a\x04\xa8E\xf4\x03\x12\x1a\n" +
	"\x10INVALID_ARGUMENT\x10\x01\x1a\x04\xa8E\x90\x03\x12\x19\n" +
	"\x0fCONTENT_MISSING\x10\x02\x1a\x04\xa8E\x90\x03\x12\x1b\n" +
	"\x11CONTEST_NOT_FOUND\x10\x03\x1a\x04\xa8E\x94\x03\x12\x19\n" +
	"\x0fCONTEST_INVALID\x10\x04\x1a\x04\xa8E\x90\x03\x12\x19\n" +
	"\x0fCONTEST_EXISTED\x10\x05\x1a\x04\xa8E\x90\x03\x12\x19\n" +
	"\x0fGROUP_NOT_FOUND\x10\x06\x1a\x04\xa8E\x94\x03\x12\x17\n" +
	"\rGROUP_INVALID\x10\a\x1a\x04\xa8E\x90\x03\x12\x17\n" +
	"\rGROUP_EXISTED\x10\b\x1a\x04\xa8E\x90\x03\x12\x18\n" +
	"\x0eUSER_NOT_FOUND\x10\t\x1a\x04\xa8E\x94\x03\x12\x16\n" +
	"\fUSER_EXISTED\x10\n" +
	"\x1a\x04\xa8E\x90\x03\x12\x16\n" +
	"\fUSER_INVALID\x10\v\x1a\x04\xa8E\x90\x03\x1a\x04\xa0E\xf4\x03*2\n" +
	"\n" +
	"Visibility\x12\v\n" +
	"\aPrivate\x10\x00\x12\n" +
	"\n" +
	"\x06Public\x10\x01\x12\v\n" +
	"\aContest\x10\x022\x89&\n" +
	"\x05Admin\x12\xb6\x01\n" +
	"\x16DeleteCasesByProblemId\x12@.api.sastoj.admin.admin.service.v1.DeleteCasesByProblemIdRequest\x1a>.api.sastoj.admin.admin.service.v1.DeleteCasesByProblemIdReply\"\x1a\x82\xd3\xe4\x93\x02\x14*\x12/case/{problem_id}\x12\x94\x01\n" +
	"\rCreateContest\x127.api.sastoj.admin.admin.service.v1.CreateContestRequest\x1a5.api.sastoj.admin.admin.service.v1.CreateContestReply\"\x13\x82\xd3\xe4\x93\x02\r:\x01*\"\b/contest\x12\x94\x01\n" +
	"\rUpdateContest\x127.api.sastoj.admin.admin.service.v1.UpdateContestRequest\x1a5.api.sastoj.admin.admin.service.v1.UpdateContestReply\"\x13\x82\xd3\xe4\x93\x02\r:\x01*\x1a\b/contest\x12\x96\x01\n" +
	"\rDeleteContest\x127.api.sastoj.admin.admin.service.v1.DeleteContestRequest\x1a5.api.sastoj.admin.admin.service.v1.DeleteContestReply\"\x15\x82\xd3\xe4\x93\x02\x0f*\r/contest/{id}\x12\x8d\x01\n" +
	"\n" +
	"GetContest\x124.api.sastoj.admin.admin.service.v1.GetContestRequest\x1a2.api.sastoj.admin.admin.service.v1.GetContestReply\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/contest/{id}\x12\x8b\x01\n" +
	"\vListContest\x125.api.sastoj.admin.admin.service.v1.ListContestRequest\x1a3.api.sastoj.admin.admin.service.v1.ListContestReply\"\x10\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/contest\x12\xa3\x01\n" +
	"\x0eAddContestants\x128.api.sastoj.admin.admin.service.v1.AddContestantsRequest\x1a6.api.sastoj.admin.admin.service.v1.AddContestantsReply\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/contest/contestants\x12\xa6\x01\n" +
	"\rManualRanking\x127.api.sastoj.admin.admin.service.v1.ManualRankingRequest\x1a5.api.sastoj.admin.admin.service.v1.ManualRankingReply\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/contest/{contest_id}/rank\x12\x9a\x01\n" +
	"\n" +
	"GetRanking\x124.api.sastoj.admin.admin.service.v1.GetRankingRequest\x1a2.api.sastoj.admin.admin.service.v1.GetRankingReply\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/contest/{contest_id}/rank\x12\x8c\x01\n" +
	"\vCreateGroup\x125.api.sastoj.admin.admin.service.v1.CreateGroupRequest\x1a3.api.sastoj.admin.admin.service.v1.CreateGroupReply\"\x11\x82\xd3\xe4\x93\x02\v:\x01*\"\x06/group\x12\x8c\x01\n" +
	"\vUpdateGroup\x125.api.sastoj.admin.admin.service.v1.UpdateGroupRequest\x1a3.api.sastoj.admin.admin.service.v1.UpdateGroupReply\"\x11\x82\xd3\xe4\x93\x02\v:\x01*\x1a\x06/group\x12\x8e\x01\n" +
	"\vDeleteGroup\x125.api.sastoj.admin.admin.service.v1.DeleteGroupRequest\x1a3.api.sastoj.admin.admin.service.v1.DeleteGroupReply\"\x13\x82\xd3\xe4\x93\x02\r*\v/group/{id}\x12\x85\x01\n" +
	"\bGetGroup\x122.api.sastoj.admin.admin.service.v1.GetGroupRequest\x1a0.api.sastoj.admin.admin.service.v1.GetGroupReply\"\x13\x82\xd3\xe4\x93\x02\r\x12\v/group/{id}\x12\x83\x01\n" +
	"\tListGroup\x123.api.sastoj.admin.admin.service.v1.ListGroupRequest\x1a1.api.sastoj.admin.admin.service.v1.ListGroupReply\"\x0e\x82\xd3\xe4\x93\x02\b\x12\x06/group\x12\x9c\x01\n" +
	"\vSubmitJudge\x125.api.sastoj.admin.admin.service.v1.SubmitJudgeRequest\x1a3.api.sastoj.admin.admin.service.v1.SubmitJudgeReply\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/judge/{submission_id}\x12\xa1\x01\n" +
	"\x13GetJudgableProblems\x12=.api.sastoj.admin.admin.service.v1.GetJudgableProblemsRequest\x1a;.api.sastoj.admin.admin.service.v1.GetJudgableProblemsReply\"\x0e\x82\xd3\xe4\x93\x02\b\x12\x06/judge\x12\x9f\x01\n" +
	"\x0eGetSubmissions\x128.api.sastoj.admin.admin.service.v1.GetSubmissionsRequest\x1a6.api.sastoj.admin.admin.service.v1.GetSubmissionsReply\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/judge/{problem_id}\x12\xb1\x01\n" +
	"\x11UpdateAdjudicator\x12;.api.sastoj.admin.admin.service.v1.UpdateAdjudicatorRequest\x1a9.api.sastoj.admin.admin.service.v1.UpdateAdjudicatorReply\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/adjudicator/{problem_id}\x12\xa5\x01\n" +
	"\x0eGetAdjudicator\x128.api.sastoj.admin.admin.service.v1.GetAdjudicatorRequest\x1a6.api.sastoj.admin.admin.service.v1.GetAdjudicatorReply\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/adjudicator/{problem_id}\x12\x94\x01\n" +
	"\rCreateProblem\x127.api.sastoj.admin.admin.service.v1.CreateProblemRequest\x1a5.api.sastoj.admin.admin.service.v1.CreateProblemReply\"\x13\x82\xd3\xe4\x93\x02\r:\x01*\"\b/problem\x12\x94\x01\n" +
	"\rUpdateProblem\x127.api.sastoj.admin.admin.service.v1.UpdateProblemRequest\x1a5.api.sastoj.admin.admin.service.v1.UpdateProblemReply\"\x13\x82\xd3\xe4\x93\x02\r:\x01*\x1a\b/problem\x12\x96\x01\n" +
	"\rDeleteProblem\x127.api.sastoj.admin.admin.service.v1.DeleteProblemRequest\x1a5.api.sastoj.admin.admin.service.v1.DeleteProblemReply\"\x15\x82\xd3\xe4\x93\x02\x0f*\r/problem/{id}\x12\x90\x01\n" +
	"\vListProblem\x125.api.sastoj.admin.admin.service.v1.ListProblemRequest\x1a3.api.sastoj.admin.admin.service.v1.ListProblemReply\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/problem/list\x12\x8d\x01\n" +
	"\n" +
	"GetProblem\x124.api.sastoj.admin.admin.service.v1.GetProblemRequest\x1a2.api.sastoj.admin.admin.service.v1.GetProblemReply\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/problem/{id}\x12\x9d\x01\n" +
	"\x0fGetProblemTypes\x129.api.sastoj.admin.admin.service.v1.GetProblemTypesRequest\x1a7.api.sastoj.admin.admin.service.v1.GetProblemTypesReply\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/problem-types\x12\x89\x01\n" +
	"\n" +
	"CreateUser\x124.api.sastoj.admin.admin.service.v1.CreateUserRequest\x1a2.api.sastoj.admin.admin.service.v1.CreateUserReply\"\x11\x82\xd3\xe4\x93\x02\v:\x01*\"\x06/users\x12\x9e\x01\n" +
	"\x0fBatchCreateUser\x129.api.sastoj.admin.admin.service.v1.BatchCreateUserRequest\x1a7.api.sastoj.admin.admin.service.v1.BatchCreateUserReply\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/users/batch\x12\x89\x01\n" +
	"\n" +
	"UpdateUser\x124.api.sastoj.admin.admin.service.v1.UpdateUserRequest\x1a2.api.sastoj.admin.admin.service.v1.UpdateUserReply\"\x11\x82\xd3\xe4\x93\x02\v:\x01*\x1a\x06/users\x12\x8b\x01\n" +
	"\n" +
	"DeleteUser\x124.api.sastoj.admin.admin.service.v1.DeleteUserRequest\x1a2.api.sastoj.admin.admin.service.v1.DeleteUserReply\"\x13\x82\xd3\xe4\x93\x02\r*\v/users/{id}\x12\x82\x01\n" +
	"\aGetUser\x121.api.sastoj.admin.admin.service.v1.GetUserRequest\x1a/.api.sastoj.admin.admin.service.v1.GetUserReply\"\x13\x82\xd3\xe4\x93\x02\r\x12\v/users/{id}\x12\x80\x01\n" +
	"\bListUser\x122.api.sastoj.admin.admin.service.v1.ListUserRequest\x1a0.api.sastoj.admin.admin.service.v1.ListUserReply\"\x0e\x82\xd3\xe4\x93\x02\b\x12\x06/users\x12\x9e\x01\n" +
	"\x0fGetMQQueueStats\x129.api.sastoj.admin.admin.service.v1.GetMQQueueStatsRequest\x1a7.api.sastoj.admin.admin.service.v1.GetMQQueueStatsReply\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/mq/queue-statsB\x8b\x02\n" +
	"%com.api.sastoj.admin.admin.service.v1B\n" +
	"AdminProtoP\x01Z+sastoj/api/sastoj/admin/admin/service/v1;v1\xa2\x02\x05ASAAS\xaa\x02!Api.Sastoj.Admin.Admin.Service.V1\xca\x02!Api\\Sastoj\\Admin\\Admin\\Service\\V1\xe2\x02-Api\\Sastoj\\Admin\\Admin\\Service\\V1\\GPBMetadata\xea\x02&Api::Sastoj::Admin::Admin::Service::V1b\x06proto3"

var (
	file_admin_admin_service_v1_admin_proto_rawDescOnce sync.Once
	file_admin_admin_service_v1_admin_proto_rawDescData []byte
)

func file_admin_admin_service_v1_admin_proto_rawDescGZIP() []byte {
	file_admin_admin_service_v1_admin_proto_rawDescOnce.Do(func() {
		file_admin_admin_service_v1_admin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_admin_admin_service_v1_admin_proto_rawDesc), len(file_admin_admin_service_v1_admin_proto_rawDesc)))
	})
	return file_admin_admin_service_v1_admin_proto_rawDescData
}

var file_admin_admin_service_v1_admin_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_admin_admin_service_v1_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 82)
var file_admin_admin_service_v1_admin_proto_goTypes = []any{
	(ErrorReason)(0),                                 // 0: api.sastoj.admin.admin.service.v1.ErrorReason
	(Visibility)(0),                                  // 1: api.sastoj.admin.admin.service.v1.Visibility
	(*Case)(nil),                                     // 2: api.sastoj.admin.admin.service.v1.Case
	(*DeleteCasesByProblemIdRequest)(nil),            // 3: api.sastoj.admin.admin.service.v1.DeleteCasesByProblemIdRequest
	(*DeleteCasesByProblemIdReply)(nil),              // 4: api.sastoj.admin.admin.service.v1.DeleteCasesByProblemIdReply
	(*CreateContestRequest)(nil),                     // 5: api.sastoj.admin.admin.service.v1.CreateContestRequest
	(*CreateContestReply)(nil),                       // 6: api.sastoj.admin.admin.service.v1.CreateContestReply
	(*UpdateContestRequest)(nil),                     // 7: api.sastoj.admin.admin.service.v1.UpdateContestRequest
	(*UpdateContestReply)(nil),                       // 8: api.sastoj.admin.admin.service.v1.UpdateContestReply
	(*DeleteContestRequest)(nil),                     // 9: api.sastoj.admin.admin.service.v1.DeleteContestRequest
	(*DeleteContestReply)(nil),                       // 10: api.sastoj.admin.admin.service.v1.DeleteContestReply
	(*GetContestRequest)(nil),                        // 11: api.sastoj.admin.admin.service.v1.GetContestRequest
	(*GetContestReply)(nil),                          // 12: api.sastoj.admin.admin.service.v1.GetContestReply
	(*ListContestRequest)(nil),                       // 13: api.sastoj.admin.admin.service.v1.ListContestRequest
	(*ListContestReply)(nil),                         // 14: api.sastoj.admin.admin.service.v1.ListContestReply
	(*AddContestantsRequest)(nil),                    // 15: api.sastoj.admin.admin.service.v1.AddContestantsRequest
	(*AddContestantsReply)(nil),                      // 16: api.sastoj.admin.admin.service.v1.AddContestantsReply
	(*ManualRankingRequest)(nil),                     // 17: api.sastoj.admin.admin.service.v1.ManualRankingRequest
	(*ManualRankingReply)(nil),                       // 18: api.sastoj.admin.admin.service.v1.ManualRankingReply
	(*GetRankingRequest)(nil),                        // 19: api.sastoj.admin.admin.service.v1.GetRankingRequest
	(*GetRankingReply)(nil),                          // 20: api.sastoj.admin.admin.service.v1.GetRankingReply
	(*CreateGroupRequest)(nil),                       // 21: api.sastoj.admin.admin.service.v1.CreateGroupRequest
	(*CreateGroupReply)(nil),                         // 22: api.sastoj.admin.admin.service.v1.CreateGroupReply
	(*UpdateGroupRequest)(nil),                       // 23: api.sastoj.admin.admin.service.v1.UpdateGroupRequest
	(*UpdateGroupReply)(nil),                         // 24: api.sastoj.admin.admin.service.v1.UpdateGroupReply
	(*DeleteGroupRequest)(nil),                       // 25: api.sastoj.admin.admin.service.v1.DeleteGroupRequest
	(*DeleteGroupReply)(nil),                         // 26: api.sastoj.admin.admin.service.v1.DeleteGroupReply
	(*GetGroupRequest)(nil),                          // 27: api.sastoj.admin.admin.service.v1.GetGroupRequest
	(*GetGroupReply)(nil),                            // 28: api.sastoj.admin.admin.service.v1.GetGroupReply
	(*ListGroupRequest)(nil),                         // 29: api.sastoj.admin.admin.service.v1.ListGroupRequest
	(*ListGroupReply)(nil),                           // 30: api.sastoj.admin.admin.service.v1.ListGroupReply
	(*Problem)(nil),                                  // 31: api.sastoj.admin.admin.service.v1.Problem
	(*Submission)(nil),                               // 32: api.sastoj.admin.admin.service.v1.Submission
	(*SubmitJudgeRequest)(nil),                       // 33: api.sastoj.admin.admin.service.v1.SubmitJudgeRequest
	(*SubmitJudgeReply)(nil),                         // 34: api.sastoj.admin.admin.service.v1.SubmitJudgeReply
	(*GetJudgableProblemsRequest)(nil),               // 35: api.sastoj.admin.admin.service.v1.GetJudgableProblemsRequest
	(*GetJudgableProblemsReply)(nil),                 // 36: api.sastoj.admin.admin.service.v1.GetJudgableProblemsReply
	(*GetSubmissionsRequest)(nil),                    // 37: api.sastoj.admin.admin.service.v1.GetSubmissionsRequest
	(*GetSubmissionsReply)(nil),                      // 38: api.sastoj.admin.admin.service.v1.GetSubmissionsReply
	(*CreateProblemRequest)(nil),                     // 39: api.sastoj.admin.admin.service.v1.CreateProblemRequest
	(*CreateProblemReply)(nil),                       // 40: api.sastoj.admin.admin.service.v1.CreateProblemReply
	(*UpdateProblemRequest)(nil),                     // 41: api.sastoj.admin.admin.service.v1.UpdateProblemRequest
	(*UpdateProblemReply)(nil),                       // 42: api.sastoj.admin.admin.service.v1.UpdateProblemReply
	(*DeleteProblemRequest)(nil),                     // 43: api.sastoj.admin.admin.service.v1.DeleteProblemRequest
	(*DeleteProblemReply)(nil),                       // 44: api.sastoj.admin.admin.service.v1.DeleteProblemReply
	(*GetProblemRequest)(nil),                        // 45: api.sastoj.admin.admin.service.v1.GetProblemRequest
	(*GetProblemReply)(nil),                          // 46: api.sastoj.admin.admin.service.v1.GetProblemReply
	(*ListProblemRequest)(nil),                       // 47: api.sastoj.admin.admin.service.v1.ListProblemRequest
	(*ListProblemReply)(nil),                         // 48: api.sastoj.admin.admin.service.v1.ListProblemReply
	(*GetProblemTypesRequest)(nil),                   // 49: api.sastoj.admin.admin.service.v1.GetProblemTypesRequest
	(*GetProblemTypesReply)(nil),                     // 50: api.sastoj.admin.admin.service.v1.GetProblemTypesReply
	(*UpdateAdjudicatorRequest)(nil),                 // 51: api.sastoj.admin.admin.service.v1.UpdateAdjudicatorRequest
	(*UpdateAdjudicatorReply)(nil),                   // 52: api.sastoj.admin.admin.service.v1.UpdateAdjudicatorReply
	(*GetAdjudicatorRequest)(nil),                    // 53: api.sastoj.admin.admin.service.v1.GetAdjudicatorRequest
	(*GetAdjudicatorReply)(nil),                      // 54: api.sastoj.admin.admin.service.v1.GetAdjudicatorReply
	(*CreateUserRequest)(nil),                        // 55: api.sastoj.admin.admin.service.v1.CreateUserRequest
	(*CreateUserReply)(nil),                          // 56: api.sastoj.admin.admin.service.v1.CreateUserReply
	(*BatchCreateUserRequest)(nil),                   // 57: api.sastoj.admin.admin.service.v1.BatchCreateUserRequest
	(*BatchCreateUserReply)(nil),                     // 58: api.sastoj.admin.admin.service.v1.BatchCreateUserReply
	(*UpdateUserRequest)(nil),                        // 59: api.sastoj.admin.admin.service.v1.UpdateUserRequest
	(*UpdateUserReply)(nil),                          // 60: api.sastoj.admin.admin.service.v1.UpdateUserReply
	(*DeleteUserRequest)(nil),                        // 61: api.sastoj.admin.admin.service.v1.DeleteUserRequest
	(*DeleteUserReply)(nil),                          // 62: api.sastoj.admin.admin.service.v1.DeleteUserReply
	(*GetUserRequest)(nil),                           // 63: api.sastoj.admin.admin.service.v1.GetUserRequest
	(*GetUserReply)(nil),                             // 64: api.sastoj.admin.admin.service.v1.GetUserReply
	(*ListUserRequest)(nil),                          // 65: api.sastoj.admin.admin.service.v1.ListUserRequest
	(*ListUserReply)(nil),                            // 66: api.sastoj.admin.admin.service.v1.ListUserReply
	(*GetMQQueueStatsRequest)(nil),                   // 67: api.sastoj.admin.admin.service.v1.GetMQQueueStatsRequest
	(*GetMQQueueStatsReply)(nil),                     // 68: api.sastoj.admin.admin.service.v1.GetMQQueueStatsReply
	(*ListContestReply_Contest)(nil),                 // 69: api.sastoj.admin.admin.service.v1.ListContestReply.Contest
	(*GetRankingReply_UserResult)(nil),               // 70: api.sastoj.admin.admin.service.v1.GetRankingReply.UserResult
	(*GetRankingReply_UserResult_ProblemResult)(nil), // 71: api.sastoj.admin.admin.service.v1.GetRankingReply.UserResult.ProblemResult
	(*ListGroupReply_Group)(nil),                     // 72: api.sastoj.admin.admin.service.v1.ListGroupReply.Group
	nil,                                              // 73: api.sastoj.admin.admin.service.v1.Problem.MetadataEntry
	nil,                                              // 74: api.sastoj.admin.admin.service.v1.CreateProblemRequest.MetadataEntry
	nil,                                              // 75: api.sastoj.admin.admin.service.v1.UpdateProblemRequest.MetadataEntry
	nil,                                              // 76: api.sastoj.admin.admin.service.v1.GetProblemReply.MetadataEntry
	(*ListProblemReply_Problem)(nil),                 // 77: api.sastoj.admin.admin.service.v1.ListProblemReply.Problem
	nil,                                              // 78: api.sastoj.admin.admin.service.v1.ListProblemReply.Problem.MetadataEntry
	(*GetProblemTypesReply_ProblemType)(nil),         // 79: api.sastoj.admin.admin.service.v1.GetProblemTypesReply.ProblemType
	(*GetAdjudicatorReply_Group)(nil),                // 80: api.sastoj.admin.admin.service.v1.GetAdjudicatorReply.Group
	(*BatchCreateUserReply_User)(nil),                // 81: api.sastoj.admin.admin.service.v1.BatchCreateUserReply.User
	(*ListUserReply_User)(nil),                       // 82: api.sastoj.admin.admin.service.v1.ListUserReply.User
	(*GetMQQueueStatsReply_QueueStats)(nil),          // 83: api.sastoj.admin.admin.service.v1.GetMQQueueStatsReply.QueueStats
	(*timestamppb.Timestamp)(nil),                    // 84: google.protobuf.Timestamp
}
var file_admin_admin_service_v1_admin_proto_depIdxs = []int32{
	84, // 0: api.sastoj.admin.admin.service.v1.CreateContestRequest.start_time:type_name -> google.protobuf.Timestamp
	84, // 1: api.sastoj.admin.admin.service.v1.CreateContestRequest.end_time:type_name -> google.protobuf.Timestamp
	84, // 2: api.sastoj.admin.admin.service.v1.CreateContestRequest.create_time:type_name -> google.protobuf.Timestamp
	84, // 3: api.sastoj.admin.admin.service.v1.UpdateContestRequest.start_time:type_name -> google.protobuf.Timestamp
	84, // 4: api.sastoj.admin.admin.service.v1.UpdateContestRequest.end_time:type_name -> google.protobuf.Timestamp
	84, // 5: api.sastoj.admin.admin.service.v1.UpdateContestRequest.create_time:type_name -> google.protobuf.Timestamp
	84, // 6: api.sastoj.admin.admin.service.v1.GetContestReply.start_time:type_name -> google.protobuf.Timestamp
	84, // 7: api.sastoj.admin.admin.service.v1.GetContestReply.end_time:type_name -> google.protobuf.Timestamp
	84, // 8: api.sastoj.admin.admin.service.v1.GetContestReply.create_time:type_name -> google.protobuf.Timestamp
	69, // 9: api.sastoj.admin.admin.service.v1.ListContestReply.contests:type_name -> api.sastoj.admin.admin.service.v1.ListContestReply.Contest
	70, // 10: api.sastoj.admin.admin.service.v1.GetRankingReply.users:type_name -> api.sastoj.admin.admin.service.v1.GetRankingReply.UserResult
	12, // 11: api.sastoj.admin.admin.service.v1.GetGroupReply.manage:type_name -> api.sastoj.admin.admin.service.v1.GetContestReply
	12, // 12: api.sastoj.admin.admin.service.v1.GetGroupReply.contests:type_name -> api.sastoj.admin.admin.service.v1.GetContestReply
	31, // 13: api.sastoj.admin.admin.service.v1.GetGroupReply.problems:type_name -> api.sastoj.admin.admin.service.v1.Problem
	72, // 14: api.sastoj.admin.admin.service.v1.ListGroupReply.groups:type_name -> api.sastoj.admin.admin.service.v1.ListGroupReply.Group
	73, // 15: api.sastoj.admin.admin.service.v1.Problem.metadata:type_name -> api.sastoj.admin.admin.service.v1.Problem.MetadataEntry
	84, // 16: api.sastoj.admin.admin.service.v1.Submission.create_time:type_name -> google.protobuf.Timestamp
	31, // 17: api.sastoj.admin.admin.service.v1.GetJudgableProblemsReply.results:type_name -> api.sastoj.admin.admin.service.v1.Problem
	32, // 18: api.sastoj.admin.admin.service.v1.GetSubmissionsReply.submissions:type_name -> api.sastoj.admin.admin.service.v1.Submission
	1,  // 19: api.sastoj.admin.admin.service.v1.CreateProblemRequest.visibility:type_name -> api.sastoj.admin.admin.service.v1.Visibility
	74, // 20: api.sastoj.admin.admin.service.v1.CreateProblemRequest.metadata:type_name -> api.sastoj.admin.admin.service.v1.CreateProblemRequest.MetadataEntry
	1,  // 21: api.sastoj.admin.admin.service.v1.UpdateProblemRequest.visibility:type_name -> api.sastoj.admin.admin.service.v1.Visibility
	75, // 22: api.sastoj.admin.admin.service.v1.UpdateProblemRequest.metadata:type_name -> api.sastoj.admin.admin.service.v1.UpdateProblemRequest.MetadataEntry
	1,  // 23: api.sastoj.admin.admin.service.v1.GetProblemReply.visibility:type_name -> api.sastoj.admin.admin.service.v1.Visibility
	76, // 24: api.sastoj.admin.admin.service.v1.GetProblemReply.metadata:type_name -> api.sastoj.admin.admin.service.v1.GetProblemReply.MetadataEntry
	77, // 25: api.sastoj.admin.admin.service.v1.ListProblemReply.problems:type_name -> api.sastoj.admin.admin.service.v1.ListProblemReply.Problem
	79, // 26: api.sastoj.admin.admin.service.v1.GetProblemTypesReply.types:type_name -> api.sastoj.admin.admin.service.v1.GetProblemTypesReply.ProblemType
	80, // 27: api.sastoj.admin.admin.service.v1.GetAdjudicatorReply.groups:type_name -> api.sastoj.admin.admin.service.v1.GetAdjudicatorReply.Group
	81, // 28: api.sastoj.admin.admin.service.v1.BatchCreateUserReply.users:type_name -> api.sastoj.admin.admin.service.v1.BatchCreateUserReply.User
	82, // 29: api.sastoj.admin.admin.service.v1.ListUserReply.users:type_name -> api.sastoj.admin.admin.service.v1.ListUserReply.User
	83, // 30: api.sastoj.admin.admin.service.v1.GetMQQueueStatsReply.stats:type_name -> api.sastoj.admin.admin.service.v1.GetMQQueueStatsReply.QueueStats
	84, // 31: api.sastoj.admin.admin.service.v1.ListContestReply.Contest.start_time:type_name -> google.protobuf.Timestamp
	84, // 32: api.sastoj.admin.admin.service.v1.ListContestReply.Contest.end_time:type_name -> google.protobuf.Timestamp
	84, // 33: api.sastoj.admin.admin.service.v1.ListContestReply.Contest.create_time:type_name -> google.protobuf.Timestamp
	71, // 34: api.sastoj.admin.admin.service.v1.GetRankingReply.UserResult.problems:type_name -> api.sastoj.admin.admin.service.v1.GetRankingReply.UserResult.ProblemResult
	84, // 35: api.sastoj.admin.admin.service.v1.GetRankingReply.UserResult.ProblemResult.score_achieved_time:type_name -> google.protobuf.Timestamp
	1,  // 36: api.sastoj.admin.admin.service.v1.ListProblemReply.Problem.visibility:type_name -> api.sastoj.admin.admin.service.v1.Visibility
	78, // 37: api.sastoj.admin.admin.service.v1.ListProblemReply.Problem.metadata:type_name -> api.sastoj.admin.admin.service.v1.ListProblemReply.Problem.MetadataEntry
	3,  // 38: api.sastoj.admin.admin.service.v1.Admin.DeleteCasesByProblemId:input_type -> api.sastoj.admin.admin.service.v1.DeleteCasesByProblemIdRequest
	5,  // 39: api.sastoj.admin.admin.service.v1.Admin.CreateContest:input_type -> api.sastoj.admin.admin.service.v1.CreateContestRequest
	7,  // 40: api.sastoj.admin.admin.service.v1.Admin.UpdateContest:input_type -> api.sastoj.admin.admin.service.v1.UpdateContestRequest
	9,  // 41: api.sastoj.admin.admin.service.v1.Admin.DeleteContest:input_type -> api.sastoj.admin.admin.service.v1.DeleteContestRequest
	11, // 42: api.sastoj.admin.admin.service.v1.Admin.GetContest:input_type -> api.sastoj.admin.admin.service.v1.GetContestRequest
	13, // 43: api.sastoj.admin.admin.service.v1.Admin.ListContest:input_type -> api.sastoj.admin.admin.service.v1.ListContestRequest
	15, // 44: api.sastoj.admin.admin.service.v1.Admin.AddContestants:input_type -> api.sastoj.admin.admin.service.v1.AddContestantsRequest
	17, // 45: api.sastoj.admin.admin.service.v1.Admin.ManualRanking:input_type -> api.sastoj.admin.admin.service.v1.ManualRankingRequest
	19, // 46: api.sastoj.admin.admin.service.v1.Admin.GetRanking:input_type -> api.sastoj.admin.admin.service.v1.GetRankingRequest
	21, // 47: api.sastoj.admin.admin.service.v1.Admin.CreateGroup:input_type -> api.sastoj.admin.admin.service.v1.CreateGroupRequest
	23, // 48: api.sastoj.admin.admin.service.v1.Admin.UpdateGroup:input_type -> api.sastoj.admin.admin.service.v1.UpdateGroupRequest
	25, // 49: api.sastoj.admin.admin.service.v1.Admin.DeleteGroup:input_type -> api.sastoj.admin.admin.service.v1.DeleteGroupRequest
	27, // 50: api.sastoj.admin.admin.service.v1.Admin.GetGroup:input_type -> api.sastoj.admin.admin.service.v1.GetGroupRequest
	29, // 51: api.sastoj.admin.admin.service.v1.Admin.ListGroup:input_type -> api.sastoj.admin.admin.service.v1.ListGroupRequest
	33, // 52: api.sastoj.admin.admin.service.v1.Admin.SubmitJudge:input_type -> api.sastoj.admin.admin.service.v1.SubmitJudgeRequest
	35, // 53: api.sastoj.admin.admin.service.v1.Admin.GetJudgableProblems:input_type -> api.sastoj.admin.admin.service.v1.GetJudgableProblemsRequest
	37, // 54: api.sastoj.admin.admin.service.v1.Admin.GetSubmissions:input_type -> api.sastoj.admin.admin.service.v1.GetSubmissionsRequest
	51, // 55: api.sastoj.admin.admin.service.v1.Admin.UpdateAdjudicator:input_type -> api.sastoj.admin.admin.service.v1.UpdateAdjudicatorRequest
	53, // 56: api.sastoj.admin.admin.service.v1.Admin.GetAdjudicator:input_type -> api.sastoj.admin.admin.service.v1.GetAdjudicatorRequest
	39, // 57: api.sastoj.admin.admin.service.v1.Admin.CreateProblem:input_type -> api.sastoj.admin.admin.service.v1.CreateProblemRequest
	41, // 58: api.sastoj.admin.admin.service.v1.Admin.UpdateProblem:input_type -> api.sastoj.admin.admin.service.v1.UpdateProblemRequest
	43, // 59: api.sastoj.admin.admin.service.v1.Admin.DeleteProblem:input_type -> api.sastoj.admin.admin.service.v1.DeleteProblemRequest
	47, // 60: api.sastoj.admin.admin.service.v1.Admin.ListProblem:input_type -> api.sastoj.admin.admin.service.v1.ListProblemRequest
	45, // 61: api.sastoj.admin.admin.service.v1.Admin.GetProblem:input_type -> api.sastoj.admin.admin.service.v1.GetProblemRequest
	49, // 62: api.sastoj.admin.admin.service.v1.Admin.GetProblemTypes:input_type -> api.sastoj.admin.admin.service.v1.GetProblemTypesRequest
	55, // 63: api.sastoj.admin.admin.service.v1.Admin.CreateUser:input_type -> api.sastoj.admin.admin.service.v1.CreateUserRequest
	57, // 64: api.sastoj.admin.admin.service.v1.Admin.BatchCreateUser:input_type -> api.sastoj.admin.admin.service.v1.BatchCreateUserRequest
	59, // 65: api.sastoj.admin.admin.service.v1.Admin.UpdateUser:input_type -> api.sastoj.admin.admin.service.v1.UpdateUserRequest
	61, // 66: api.sastoj.admin.admin.service.v1.Admin.DeleteUser:input_type -> api.sastoj.admin.admin.service.v1.DeleteUserRequest
	63, // 67: api.sastoj.admin.admin.service.v1.Admin.GetUser:input_type -> api.sastoj.admin.admin.service.v1.GetUserRequest
	65, // 68: api.sastoj.admin.admin.service.v1.Admin.ListUser:input_type -> api.sastoj.admin.admin.service.v1.ListUserRequest
	67, // 69: api.sastoj.admin.admin.service.v1.Admin.GetMQQueueStats:input_type -> api.sastoj.admin.admin.service.v1.GetMQQueueStatsRequest
	4,  // 70: api.sastoj.admin.admin.service.v1.Admin.DeleteCasesByProblemId:output_type -> api.sastoj.admin.admin.service.v1.DeleteCasesByProblemIdReply
	6,  // 71: api.sastoj.admin.admin.service.v1.Admin.CreateContest:output_type -> api.sastoj.admin.admin.service.v1.CreateContestReply
	8,  // 72: api.sastoj.admin.admin.service.v1.Admin.UpdateContest:output_type -> api.sastoj.admin.admin.service.v1.UpdateContestReply
	10, // 73: api.sastoj.admin.admin.service.v1.Admin.DeleteContest:output_type -> api.sastoj.admin.admin.service.v1.DeleteContestReply
	12, // 74: api.sastoj.admin.admin.service.v1.Admin.GetContest:output_type -> api.sastoj.admin.admin.service.v1.GetContestReply
	14, // 75: api.sastoj.admin.admin.service.v1.Admin.ListContest:output_type -> api.sastoj.admin.admin.service.v1.ListContestReply
	16, // 76: api.sastoj.admin.admin.service.v1.Admin.AddContestants:output_type -> api.sastoj.admin.admin.service.v1.AddContestantsReply
	18, // 77: api.sastoj.admin.admin.service.v1.Admin.ManualRanking:output_type -> api.sastoj.admin.admin.service.v1.ManualRankingReply
	20, // 78: api.sastoj.admin.admin.service.v1.Admin.GetRanking:output_type -> api.sastoj.admin.admin.service.v1.GetRankingReply
	22, // 79: api.sastoj.admin.admin.service.v1.Admin.CreateGroup:output_type -> api.sastoj.admin.admin.service.v1.CreateGroupReply
	24, // 80: api.sastoj.admin.admin.service.v1.Admin.UpdateGroup:output_type -> api.sastoj.admin.admin.service.v1.UpdateGroupReply
	26, // 81: api.sastoj.admin.admin.service.v1.Admin.DeleteGroup:output_type -> api.sastoj.admin.admin.service.v1.DeleteGroupReply
	28, // 82: api.sastoj.admin.admin.service.v1.Admin.GetGroup:output_type -> api.sastoj.admin.admin.service.v1.GetGroupReply
	30, // 83: api.sastoj.admin.admin.service.v1.Admin.ListGroup:output_type -> api.sastoj.admin.admin.service.v1.ListGroupReply
	34, // 84: api.sastoj.admin.admin.service.v1.Admin.SubmitJudge:output_type -> api.sastoj.admin.admin.service.v1.SubmitJudgeReply
	36, // 85: api.sastoj.admin.admin.service.v1.Admin.GetJudgableProblems:output_type -> api.sastoj.admin.admin.service.v1.GetJudgableProblemsReply
	38, // 86: api.sastoj.admin.admin.service.v1.Admin.GetSubmissions:output_type -> api.sastoj.admin.admin.service.v1.GetSubmissionsReply
	52, // 87: api.sastoj.admin.admin.service.v1.Admin.UpdateAdjudicator:output_type -> api.sastoj.admin.admin.service.v1.UpdateAdjudicatorReply
	54, // 88: api.sastoj.admin.admin.service.v1.Admin.GetAdjudicator:output_type -> api.sastoj.admin.admin.service.v1.GetAdjudicatorReply
	40, // 89: api.sastoj.admin.admin.service.v1.Admin.CreateProblem:output_type -> api.sastoj.admin.admin.service.v1.CreateProblemReply
	42, // 90: api.sastoj.admin.admin.service.v1.Admin.UpdateProblem:output_type -> api.sastoj.admin.admin.service.v1.UpdateProblemReply
	44, // 91: api.sastoj.admin.admin.service.v1.Admin.DeleteProblem:output_type -> api.sastoj.admin.admin.service.v1.DeleteProblemReply
	48, // 92: api.sastoj.admin.admin.service.v1.Admin.ListProblem:output_type -> api.sastoj.admin.admin.service.v1.ListProblemReply
	46, // 93: api.sastoj.admin.admin.service.v1.Admin.GetProblem:output_type -> api.sastoj.admin.admin.service.v1.GetProblemReply
	50, // 94: api.sastoj.admin.admin.service.v1.Admin.GetProblemTypes:output_type -> api.sastoj.admin.admin.service.v1.GetProblemTypesReply
	56, // 95: api.sastoj.admin.admin.service.v1.Admin.CreateUser:output_type -> api.sastoj.admin.admin.service.v1.CreateUserReply
	58, // 96: api.sastoj.admin.admin.service.v1.Admin.BatchCreateUser:output_type -> api.sastoj.admin.admin.service.v1.BatchCreateUserReply
	60, // 97: api.sastoj.admin.admin.service.v1.Admin.UpdateUser:output_type -> api.sastoj.admin.admin.service.v1.UpdateUserReply
	62, // 98: api.sastoj.admin.admin.service.v1.Admin.DeleteUser:output_type -> api.sastoj.admin.admin.service.v1.DeleteUserReply
	64, // 99: api.sastoj.admin.admin.service.v1.Admin.GetUser:output_type -> api.sastoj.admin.admin.service.v1.GetUserReply
	66, // 100: api.sastoj.admin.admin.service.v1.Admin.ListUser:output_type -> api.sastoj.admin.admin.service.v1.ListUserReply
	68, // 101: api.sastoj.admin.admin.service.v1.Admin.GetMQQueueStats:output_type -> api.sastoj.admin.admin.service.v1.GetMQQueueStatsReply
	70, // [70:102] is the sub-list for method output_type
	38, // [38:70] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_admin_admin_service_v1_admin_proto_init() }
func file_admin_admin_service_v1_admin_proto_init() {
	if File_admin_admin_service_v1_admin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_admin_admin_service_v1_admin_proto_rawDesc), len(file_admin_admin_service_v1_admin_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   82,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_admin_admin_service_v1_admin_proto_goTypes,
		DependencyIndexes: file_admin_admin_service_v1_admin_proto_depIdxs,
		EnumInfos:         file_admin_admin_service_v1_admin_proto_enumTypes,
		MessageInfos:      file_admin_admin_service_v1_admin_proto_msgTypes,
	}.Build()
	File_admin_admin_service_v1_admin_proto = out.File
	file_admin_admin_service_v1_admin_proto_goTypes = nil
	file_admin_admin_service_v1_admin_proto_depIdxs = nil
}
