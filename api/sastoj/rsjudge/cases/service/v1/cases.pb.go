// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: sastoj/rsjudge/cases/service/v1/cases.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to fetch cases from the backend server.
type FetchCasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the problem.
	ProblemId int32 `protobuf:"varint,1,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *FetchCasesRequest) Reset() {
	*x = FetchCasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sastoj_rsjudge_cases_service_v1_cases_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchCasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchCasesRequest) ProtoMessage() {}

func (x *FetchCasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sastoj_rsjudge_cases_service_v1_cases_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchCasesRequest.ProtoReflect.Descriptor instead.
func (*FetchCasesRequest) Descriptor() ([]byte, []int) {
	return file_sastoj_rsjudge_cases_service_v1_cases_proto_rawDescGZIP(), []int{0}
}

func (x *FetchCasesRequest) GetProblemId() int32 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

// Response to fetch cases from the backend server.
type FetchCasesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Chunk of the tarball, containing poblem config and cases.
	//
	// Chunk size should be around 1kiB, except the last chunk.
	//
	// The tarball should be compressed in zstd.
	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *FetchCasesResponse) Reset() {
	*x = FetchCasesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sastoj_rsjudge_cases_service_v1_cases_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchCasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchCasesResponse) ProtoMessage() {}

func (x *FetchCasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sastoj_rsjudge_cases_service_v1_cases_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchCasesResponse.ProtoReflect.Descriptor instead.
func (*FetchCasesResponse) Descriptor() ([]byte, []int) {
	return file_sastoj_rsjudge_cases_service_v1_cases_proto_rawDescGZIP(), []int{1}
}

func (x *FetchCasesResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

var File_sastoj_rsjudge_cases_service_v1_cases_proto protoreflect.FileDescriptor

var file_sastoj_rsjudge_cases_service_v1_cases_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x73, 0x61, 0x73, 0x74, 0x6f, 0x6a, 0x2f, 0x72, 0x73, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x61, 0x73, 0x74, 0x6f, 0x6a, 0x2e, 0x72, 0x73, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x22, 0x32, 0x0a, 0x11, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x61, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x12, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43,
	0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x32, 0x8f, 0x01, 0x0a, 0x0c, 0x43, 0x61, 0x73, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a, 0x0a, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x61, 0x73, 0x65,
	0x73, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x61, 0x73, 0x74, 0x6f, 0x6a, 0x2e, 0x72,
	0x73, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x61, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x61, 0x73, 0x74, 0x6f, 0x6a, 0x2e, 0x72, 0x73, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x63,
	0x61, 0x73, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x30, 0x01, 0x42, 0x97, 0x02, 0x0a, 0x27, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x61, 0x73, 0x74, 0x6f, 0x6a, 0x2e, 0x72, 0x73, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e,
	0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x42, 0x0a, 0x43, 0x61, 0x73, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2d,
	0x73, 0x61, 0x73, 0x74, 0x6f, 0x6a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x61, 0x73, 0x74, 0x6f,
	0x6a, 0x2f, 0x72, 0x73, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0xa2, 0x02, 0x05,
	0x41, 0x53, 0x52, 0x43, 0x53, 0xaa, 0x02, 0x23, 0x41, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x73, 0x74,
	0x6f, 0x6a, 0x2e, 0x52, 0x73, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x73,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x23, 0x41, 0x70,
	0x69, 0x5c, 0x53, 0x61, 0x73, 0x74, 0x6f, 0x6a, 0x5c, 0x52, 0x73, 0x6a, 0x75, 0x64, 0x67, 0x65,
	0x5c, 0x43, 0x61, 0x73, 0x65, 0x73, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x2f, 0x41, 0x70, 0x69, 0x5c, 0x53, 0x61, 0x73, 0x74, 0x6f, 0x6a, 0x5c, 0x52,
	0x73, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x5c, 0x43, 0x61, 0x73, 0x65, 0x73, 0x5c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x28, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x53, 0x61, 0x73, 0x74, 0x6f,
	0x6a, 0x3a, 0x3a, 0x52, 0x73, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x3a, 0x3a, 0x43, 0x61, 0x73, 0x65,
	0x73, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sastoj_rsjudge_cases_service_v1_cases_proto_rawDescOnce sync.Once
	file_sastoj_rsjudge_cases_service_v1_cases_proto_rawDescData = file_sastoj_rsjudge_cases_service_v1_cases_proto_rawDesc
)

func file_sastoj_rsjudge_cases_service_v1_cases_proto_rawDescGZIP() []byte {
	file_sastoj_rsjudge_cases_service_v1_cases_proto_rawDescOnce.Do(func() {
		file_sastoj_rsjudge_cases_service_v1_cases_proto_rawDescData = protoimpl.X.CompressGZIP(file_sastoj_rsjudge_cases_service_v1_cases_proto_rawDescData)
	})
	return file_sastoj_rsjudge_cases_service_v1_cases_proto_rawDescData
}

var file_sastoj_rsjudge_cases_service_v1_cases_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sastoj_rsjudge_cases_service_v1_cases_proto_goTypes = []any{
	(*FetchCasesRequest)(nil),  // 0: api.sastoj.rsjudge.cases.service.v1.FetchCasesRequest
	(*FetchCasesResponse)(nil), // 1: api.sastoj.rsjudge.cases.service.v1.FetchCasesResponse
}
var file_sastoj_rsjudge_cases_service_v1_cases_proto_depIdxs = []int32{
	0, // 0: api.sastoj.rsjudge.cases.service.v1.CasesService.FetchCases:input_type -> api.sastoj.rsjudge.cases.service.v1.FetchCasesRequest
	1, // 1: api.sastoj.rsjudge.cases.service.v1.CasesService.FetchCases:output_type -> api.sastoj.rsjudge.cases.service.v1.FetchCasesResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sastoj_rsjudge_cases_service_v1_cases_proto_init() }
func file_sastoj_rsjudge_cases_service_v1_cases_proto_init() {
	if File_sastoj_rsjudge_cases_service_v1_cases_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sastoj_rsjudge_cases_service_v1_cases_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*FetchCasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sastoj_rsjudge_cases_service_v1_cases_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FetchCasesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sastoj_rsjudge_cases_service_v1_cases_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sastoj_rsjudge_cases_service_v1_cases_proto_goTypes,
		DependencyIndexes: file_sastoj_rsjudge_cases_service_v1_cases_proto_depIdxs,
		MessageInfos:      file_sastoj_rsjudge_cases_service_v1_cases_proto_msgTypes,
	}.Build()
	File_sastoj_rsjudge_cases_service_v1_cases_proto = out.File
	file_sastoj_rsjudge_cases_service_v1_cases_proto_rawDesc = nil
	file_sastoj_rsjudge_cases_service_v1_cases_proto_goTypes = nil
	file_sastoj_rsjudge_cases_service_v1_cases_proto_depIdxs = nil
}
