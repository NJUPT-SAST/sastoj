syntax = "proto3";

package api.sastoj.rsjudge.cases.service.v1;

option go_package = "sastoj/api/sastoj/rsjudge/cases/service/v1;v1";

// Fetch cases from backend server.
service CasesService {
  // Fetch cases from the backend server.
  //
  // Server should return cases in chunks. Each chunk should be around 1kiB.
  //
  // Server should return all chunks in order, or correctly cancel the stream.
  //
  // Server should also put a `cases_id` item in metadata.
  rpc FetchCases(FetchCasesRequest) returns (stream FetchCasesResponse);
}

// Request to fetch cases from the backend server.
message FetchCasesRequest {
  // The id of the problem.
  int32 problem_id = 1;
}

// Response to fetch cases from the backend server.
message FetchCasesResponse {
  // Chunk of the tarball, containing poblem config and cases.
  //
  // Chunk size should be around 1kiB, except the last chunk.
  //
  // The tarball should be compressed in zstd.
  bytes chunk = 1;
}
