// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ContestsColumns holds the columns for the "contests" table.
	ContestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt16},
		{Name: "type", Type: field.TypeInt16},
		{Name: "start_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "language", Type: field.TypeString},
		{Name: "extra_time", Type: field.TypeInt16, Default: 0},
		{Name: "create_time", Type: field.TypeTime},
	}
	// ContestsTable holds the schema information for the "contests" table.
	ContestsTable = &schema.Table{
		Name:       "contests",
		Columns:    ContestsColumns,
		PrimaryKey: []*schema.Column{ContestsColumns[0]},
	}
	// GroupsColumns holds the columns for the "groups" table.
	GroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "group_name", Type: field.TypeString, Default: "unknown"},
		{Name: "root_group_id", Type: field.TypeInt, Nullable: true, Default: 1},
	}
	// GroupsTable holds the schema information for the "groups" table.
	GroupsTable = &schema.Table{
		Name:       "groups",
		Columns:    GroupsColumns,
		PrimaryKey: []*schema.Column{GroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "groups_groups_subgroups",
				Columns:    []*schema.Column{GroupsColumns[2]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// LoginSessionColumns holds the columns for the "login_session" table.
	LoginSessionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
	}
	// LoginSessionTable holds the schema information for the "login_session" table.
	LoginSessionTable = &schema.Table{
		Name:       "login_session",
		Columns:    LoginSessionColumns,
		PrimaryKey: []*schema.Column{LoginSessionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "login_session_users_login_sessions",
				Columns:    []*schema.Column{LoginSessionColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProblemsColumns holds the columns for the "problems" table.
	ProblemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "content", Type: field.TypeString},
		{Name: "point", Type: field.TypeInt16},
		{Name: "case_version", Type: field.TypeInt16, Default: 1},
		{Name: "index", Type: field.TypeInt16},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "config", Type: field.TypeString},
	}
	// ProblemsTable holds the schema information for the "problems" table.
	ProblemsTable = &schema.Table{
		Name:       "problems",
		Columns:    ProblemsColumns,
		PrimaryKey: []*schema.Column{ProblemsColumns[0]},
	}
	// ProblemCasesColumns holds the columns for the "problem_cases" table.
	ProblemCasesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "point", Type: field.TypeInt16},
		{Name: "index", Type: field.TypeInt16},
		{Name: "is_auto", Type: field.TypeBool, Default: false},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "problem_id", Type: field.TypeInt},
	}
	// ProblemCasesTable holds the schema information for the "problem_cases" table.
	ProblemCasesTable = &schema.Table{
		Name:       "problem_cases",
		Columns:    ProblemCasesColumns,
		PrimaryKey: []*schema.Column{ProblemCasesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "problem_cases_problems_problem_cases",
				Columns:    []*schema.Column{ProblemCasesColumns[5]},
				RefColumns: []*schema.Column{ProblemsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SubmitColumns holds the columns for the "submit" table.
	SubmitColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, Size: 2147483647},
		{Name: "status", Type: field.TypeInt8},
		{Name: "point", Type: field.TypeInt16},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "total_time", Type: field.TypeInt},
		{Name: "max_memory", Type: field.TypeInt},
		{Name: "language", Type: field.TypeString},
		{Name: "case_version", Type: field.TypeInt8},
		{Name: "problem_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// SubmitTable holds the schema information for the "submit" table.
	SubmitTable = &schema.Table{
		Name:       "submit",
		Columns:    SubmitColumns,
		PrimaryKey: []*schema.Column{SubmitColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "submit_problems_submission",
				Columns:    []*schema.Column{SubmitColumns[9]},
				RefColumns: []*schema.Column{ProblemsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "submit_users_submission",
				Columns:    []*schema.Column{SubmitColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SubmitCasesColumns holds the columns for the "submit_cases" table.
	SubmitCasesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "state", Type: field.TypeInt16},
		{Name: "point", Type: field.TypeInt16},
		{Name: "message", Type: field.TypeString, Size: 2147483647},
		{Name: "time", Type: field.TypeInt},
		{Name: "memory", Type: field.TypeInt},
		{Name: "problem_case_id", Type: field.TypeInt},
		{Name: "submit_id", Type: field.TypeInt},
	}
	// SubmitCasesTable holds the schema information for the "submit_cases" table.
	SubmitCasesTable = &schema.Table{
		Name:       "submit_cases",
		Columns:    SubmitCasesColumns,
		PrimaryKey: []*schema.Column{SubmitCasesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "submit_cases_problem_cases_submit_cases",
				Columns:    []*schema.Column{SubmitCasesColumns[6]},
				RefColumns: []*schema.Column{ProblemCasesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "submit_cases_submit_submit_cases",
				Columns:    []*schema.Column{SubmitCasesColumns[7]},
				RefColumns: []*schema.Column{SubmitColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Default: "unknown"},
		{Name: "password", Type: field.TypeString},
		{Name: "salt", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt16},
		{Name: "group_id", Type: field.TypeInt},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_groups_users",
				Columns:    []*schema.Column{UsersColumns[5]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ContestProblemsColumns holds the columns for the "contest_problems" table.
	ContestProblemsColumns = []*schema.Column{
		{Name: "contest_id", Type: field.TypeInt},
		{Name: "problem_id", Type: field.TypeInt},
	}
	// ContestProblemsTable holds the schema information for the "contest_problems" table.
	ContestProblemsTable = &schema.Table{
		Name:       "contest_problems",
		Columns:    ContestProblemsColumns,
		PrimaryKey: []*schema.Column{ContestProblemsColumns[0], ContestProblemsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contest_problems_contest_id",
				Columns:    []*schema.Column{ContestProblemsColumns[0]},
				RefColumns: []*schema.Column{ContestsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "contest_problems_problem_id",
				Columns:    []*schema.Column{ContestProblemsColumns[1]},
				RefColumns: []*schema.Column{ProblemsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// GroupAdminsColumns holds the columns for the "group_admins" table.
	GroupAdminsColumns = []*schema.Column{
		{Name: "group_id", Type: field.TypeInt},
		{Name: "contest_id", Type: field.TypeInt},
	}
	// GroupAdminsTable holds the schema information for the "group_admins" table.
	GroupAdminsTable = &schema.Table{
		Name:       "group_admins",
		Columns:    GroupAdminsColumns,
		PrimaryKey: []*schema.Column{GroupAdminsColumns[0], GroupAdminsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "group_admins_group_id",
				Columns:    []*schema.Column{GroupAdminsColumns[0]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "group_admins_contest_id",
				Columns:    []*schema.Column{GroupAdminsColumns[1]},
				RefColumns: []*schema.Column{ContestsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// GroupContestantsColumns holds the columns for the "group_contestants" table.
	GroupContestantsColumns = []*schema.Column{
		{Name: "group_id", Type: field.TypeInt},
		{Name: "contest_id", Type: field.TypeInt},
	}
	// GroupContestantsTable holds the schema information for the "group_contestants" table.
	GroupContestantsTable = &schema.Table{
		Name:       "group_contestants",
		Columns:    GroupContestantsColumns,
		PrimaryKey: []*schema.Column{GroupContestantsColumns[0], GroupContestantsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "group_contestants_group_id",
				Columns:    []*schema.Column{GroupContestantsColumns[0]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "group_contestants_contest_id",
				Columns:    []*schema.Column{GroupContestantsColumns[1]},
				RefColumns: []*schema.Column{ContestsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// GroupProblemsColumns holds the columns for the "group_problems" table.
	GroupProblemsColumns = []*schema.Column{
		{Name: "group_id", Type: field.TypeInt},
		{Name: "problem_id", Type: field.TypeInt},
	}
	// GroupProblemsTable holds the schema information for the "group_problems" table.
	GroupProblemsTable = &schema.Table{
		Name:       "group_problems",
		Columns:    GroupProblemsColumns,
		PrimaryKey: []*schema.Column{GroupProblemsColumns[0], GroupProblemsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "group_problems_group_id",
				Columns:    []*schema.Column{GroupProblemsColumns[0]},
				RefColumns: []*schema.Column{GroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "group_problems_problem_id",
				Columns:    []*schema.Column{GroupProblemsColumns[1]},
				RefColumns: []*schema.Column{ProblemsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ContestsTable,
		GroupsTable,
		LoginSessionTable,
		ProblemsTable,
		ProblemCasesTable,
		SubmitTable,
		SubmitCasesTable,
		UsersTable,
		ContestProblemsTable,
		GroupAdminsTable,
		GroupContestantsTable,
		GroupProblemsTable,
	}
)

func init() {
	GroupsTable.ForeignKeys[0].RefTable = GroupsTable
	LoginSessionTable.ForeignKeys[0].RefTable = UsersTable
	LoginSessionTable.Annotation = &entsql.Annotation{
		Table: "login_session",
	}
	ProblemCasesTable.ForeignKeys[0].RefTable = ProblemsTable
	SubmitTable.ForeignKeys[0].RefTable = ProblemsTable
	SubmitTable.ForeignKeys[1].RefTable = UsersTable
	SubmitTable.Annotation = &entsql.Annotation{
		Table: "submit",
	}
	SubmitCasesTable.ForeignKeys[0].RefTable = ProblemCasesTable
	SubmitCasesTable.ForeignKeys[1].RefTable = SubmitTable
	UsersTable.ForeignKeys[0].RefTable = GroupsTable
	ContestProblemsTable.ForeignKeys[0].RefTable = ContestsTable
	ContestProblemsTable.ForeignKeys[1].RefTable = ProblemsTable
	GroupAdminsTable.ForeignKeys[0].RefTable = GroupsTable
	GroupAdminsTable.ForeignKeys[1].RefTable = ContestsTable
	GroupContestantsTable.ForeignKeys[0].RefTable = GroupsTable
	GroupContestantsTable.ForeignKeys[1].RefTable = ContestsTable
	GroupProblemsTable.ForeignKeys[0].RefTable = GroupsTable
	GroupProblemsTable.ForeignKeys[1].RefTable = ProblemsTable
}
